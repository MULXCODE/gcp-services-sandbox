[
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.approve",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.dismiss",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.settings.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.settings.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.settings.update",
    "stage": "BETA"
  },
  {
    "name": "actions.agent.claimContentProvider",
    "stage": "GA",
    "title": "Claim a content provider using an AoG project"
  },
  {
    "name": "actions.agent.get",
    "stage": "GA",
    "title": "Get action data and metadata"
  },
  {
    "name": "actions.agent.update",
    "stage": "GA",
    "title": "Update action data and metadata"
  },
  {
    "name": "actions.agentVersions.create",
    "stage": "GA",
    "title": "Create an action version"
  },
  {
    "name": "actions.agentVersions.delete",
    "stage": "GA",
    "title": "Delete an action version"
  },
  {
    "name": "actions.agentVersions.deploy",
    "stage": "GA",
    "title": "Deploy an action version"
  },
  {
    "name": "actions.agentVersions.get",
    "stage": "GA",
    "title": "Get an action version"
  },
  {
    "name": "actions.agentVersions.list",
    "stage": "GA",
    "title": "List all the action versions"
  },
  {
    "apiDisabled": true,
    "name": "androidmanagement.enterprises.manage",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.createOrUpdateAll",
    "stage": "BETA",
    "title": "Create or Update All API Product Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.delete",
    "stage": "BETA",
    "title": "Delete an API Product Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.get",
    "stage": "BETA",
    "title": "Read an API Product Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.list",
    "stage": "BETA",
    "title": "List API Product Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.update",
    "stage": "BETA",
    "title": "Update an API Product Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.create",
    "stage": "BETA",
    "title": "Create an API Product"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.delete",
    "stage": "BETA",
    "title": "Delete an API Product"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.get",
    "stage": "BETA",
    "title": "Read an API Product"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.list",
    "stage": "BETA",
    "title": "List API Products"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.update",
    "stage": "BETA",
    "title": "Update an API Product"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appkeys.create",
    "stage": "BETA",
    "title": "Create Company/Developer App Key"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appkeys.delete",
    "stage": "BETA",
    "title": "Delete a Company/Developer App Key"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appkeys.get",
    "stage": "BETA",
    "title": "Get Company/Developer App Key"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appkeys.manage",
    "stage": "BETA",
    "title": "Update, Approve or Revoke a Company/Developer App Key"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apps.get",
    "stage": "BETA",
    "title": "Get an App in an Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apps.list",
    "stage": "BETA",
    "title": "List App IDs in an Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.create",
    "stage": "BETA",
    "title": "Create a Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.delete",
    "stage": "BETA",
    "title": "Delete a Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.get",
    "stage": "BETA",
    "title": "Read a Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.list",
    "stage": "BETA",
    "title": "List Deployments"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.update",
    "stage": "BETA",
    "title": "Update a Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.createOrUpdateAll",
    "stage": "BETA",
    "title": "Create or Update All Developer App Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.delete",
    "stage": "BETA",
    "title": "Delete a Developer App Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.get",
    "stage": "BETA",
    "title": "Read a Developer App Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.list",
    "stage": "BETA",
    "title": "List Developer App Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.update",
    "stage": "BETA",
    "title": "Update a Developer App Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.create",
    "stage": "BETA",
    "title": "Create a Developer App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.delete",
    "stage": "BETA",
    "title": "Delete a Developer App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.get",
    "stage": "BETA",
    "title": "Read a Developer App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.list",
    "stage": "BETA",
    "title": "List Developer Apps"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.manage",
    "stage": "BETA",
    "title": "Update, Approve or Revoke a Developer App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.createOrUpdateAll",
    "stage": "BETA",
    "title": "Create or Update All Developer Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.delete",
    "stage": "BETA",
    "title": "Delete a Developer Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.get",
    "stage": "BETA",
    "title": "Read a Developer Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.list",
    "stage": "BETA",
    "title": "List Developer Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.update",
    "stage": "BETA",
    "title": "Update a Developer Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.create",
    "stage": "BETA",
    "title": "Create a Developer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.delete",
    "stage": "BETA",
    "title": "Delete a Developer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.get",
    "stage": "BETA",
    "title": "Read a Developer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.list",
    "stage": "BETA",
    "title": "List Developers"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.update",
    "stage": "BETA",
    "title": "Update a Developer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.create",
    "stage": "BETA",
    "title": "Create an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.delete",
    "stage": "BETA",
    "title": "Delete an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.get",
    "stage": "BETA",
    "title": "Get Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.getDataLocation",
    "stage": "BETA",
    "title": "Get data location"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.getStats",
    "stage": "BETA",
    "title": "Get Stats for an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.list",
    "stage": "BETA",
    "title": "List Environments"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.manageRuntime",
    "stage": "BETA",
    "title": "Manage the runtime of an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.update",
    "stage": "BETA",
    "title": "Update an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.flowhooks.attachSharedFlow",
    "stage": "BETA",
    "title": "Attach Shared Flow to a Flowhook"
  },
  {
    "apiDisabled": true,
    "name": "apigee.flowhooks.detachSharedFlow",
    "stage": "BETA",
    "title": "Detach Shared Flow from a Flowhook"
  },
  {
    "apiDisabled": true,
    "name": "apigee.flowhooks.getSharedFlow",
    "stage": "BETA",
    "title": "Get a Shared Flow for a Flowhook"
  },
  {
    "apiDisabled": true,
    "name": "apigee.flowhooks.list",
    "stage": "BETA",
    "title": "List Flowhooks"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.create",
    "stage": "BETA",
    "title": "Create Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.delete",
    "stage": "BETA",
    "title": "Delete Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.exportCertificate",
    "stage": "BETA",
    "title": "Export Certificate for an Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.generateCSR",
    "stage": "BETA",
    "title": "Generate CSR for an Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.get",
    "stage": "BETA",
    "title": "Get Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.list",
    "stage": "BETA",
    "title": "List Aliases in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.update",
    "stage": "BETA",
    "title": "Update Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.create",
    "stage": "BETA",
    "title": "Create a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.delete",
    "stage": "BETA",
    "title": "Delete a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.export",
    "stage": "BETA",
    "title": "Export Certificate from Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.get",
    "stage": "BETA",
    "title": "Get a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.list",
    "stage": "BETA",
    "title": "List Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemaps.create",
    "stage": "BETA",
    "title": "Create a Keyvaluemap"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemaps.delete",
    "stage": "BETA",
    "title": "Delete a Keyvaluemap"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemaps.list",
    "stage": "BETA",
    "title": "List Keyvaluemaps"
  },
  {
    "apiDisabled": true,
    "name": "apigee.maskconfigs.get",
    "stage": "BETA",
    "title": "Get a Data Mask"
  },
  {
    "apiDisabled": true,
    "name": "apigee.maskconfigs.update",
    "stage": "BETA",
    "title": "Get a Data Mask"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.create",
    "stage": "BETA",
    "title": "Create Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.get",
    "stage": "BETA",
    "title": "Get Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.list",
    "stage": "BETA",
    "title": "List Apigee Organizations"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.update",
    "stage": "BETA",
    "title": "Update Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.create",
    "stage": "BETA",
    "title": "Create Proxy"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.delete",
    "stage": "BETA",
    "title": "Delete Proxy"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.get",
    "stage": "BETA",
    "title": "Get Proxy"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.list",
    "stage": "BETA",
    "title": "List Proxies"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.delete",
    "stage": "BETA",
    "title": "Delete Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.deploy",
    "stage": "BETA",
    "title": "Deploy Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.get",
    "stage": "BETA",
    "title": "Get Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.list",
    "stage": "BETA",
    "title": "List Proxy Revisions"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.undeploy",
    "stage": "BETA",
    "title": "Undeploy Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.update",
    "stage": "BETA",
    "title": "Update Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.queries.create",
    "stage": "BETA",
    "title": "Create an Async Query"
  },
  {
    "apiDisabled": true,
    "name": "apigee.queries.get",
    "stage": "BETA",
    "title": "Get an Async Query"
  },
  {
    "apiDisabled": true,
    "name": "apigee.queries.list",
    "stage": "BETA",
    "title": "List Async Queries"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.create",
    "stage": "BETA",
    "title": "Create a Reference"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.delete",
    "stage": "BETA",
    "title": "Delete a Reference"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.get",
    "stage": "BETA",
    "title": "Get a Reference"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.list",
    "stage": "BETA",
    "title": "List References"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.update",
    "stage": "BETA",
    "title": "Update a Reference"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.create",
    "stage": "BETA",
    "title": "Create a Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.delete",
    "stage": "BETA",
    "title": "Delete a Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.get",
    "stage": "BETA",
    "title": "Get a Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.list",
    "stage": "BETA",
    "title": "List Reports"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.update",
    "stage": "BETA",
    "title": "Update a Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.create",
    "stage": "BETA",
    "title": "Create a Resourcefile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.delete",
    "stage": "BETA",
    "title": "Delete a Resourcefile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.get",
    "stage": "BETA",
    "title": "Get a Resourcefile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.list",
    "stage": "BETA",
    "title": "List Resourcefiles"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.update",
    "stage": "BETA",
    "title": "Update a Resourcefile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.delete",
    "stage": "BETA",
    "title": "Delete a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.deploy",
    "stage": "BETA",
    "title": "Deploy a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.get",
    "stage": "BETA",
    "title": "Get a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.list",
    "stage": "BETA",
    "title": "List Shared Flow Revisions"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.undeploy",
    "stage": "BETA",
    "title": "Undeploy a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.update",
    "stage": "BETA",
    "title": "Update a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflows.create",
    "stage": "BETA",
    "title": "Create a Shared Flow"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflows.delete",
    "stage": "BETA",
    "title": "Delete a Shared Flow"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflows.get",
    "stage": "BETA",
    "title": "Get a Shared Flow"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflows.list",
    "stage": "BETA",
    "title": "List Shared Flows"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.create",
    "stage": "BETA",
    "title": "Create a TargetServer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.delete",
    "stage": "BETA",
    "title": "Delete a TargetServer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.get",
    "stage": "BETA",
    "title": "Get a TargetServer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.list",
    "stage": "BETA",
    "title": "List TargetServers"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.update",
    "stage": "BETA",
    "title": "Update a TargetServer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.tracesessions.create",
    "stage": "BETA",
    "title": "Create a Trace Session"
  },
  {
    "apiDisabled": true,
    "name": "apigee.tracesessions.delete",
    "stage": "BETA",
    "title": "Delete a Trace Session"
  },
  {
    "apiDisabled": true,
    "name": "apigee.tracesessions.get",
    "stage": "BETA",
    "title": "Get a Trace Session"
  },
  {
    "apiDisabled": true,
    "name": "apigee.tracesessions.list",
    "stage": "BETA",
    "title": "List Trace Sessions"
  },
  {
    "name": "appengine.applications.create",
    "stage": "GA"
  },
  {
    "name": "appengine.applications.get",
    "stage": "GA"
  },
  {
    "name": "appengine.applications.update",
    "stage": "GA"
  },
  {
    "name": "appengine.instances.delete",
    "stage": "GA"
  },
  {
    "name": "appengine.instances.get",
    "stage": "GA"
  },
  {
    "name": "appengine.instances.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.addKey",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.flush",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.getKey",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.update",
    "stage": "BETA"
  },
  {
    "name": "appengine.operations.get",
    "stage": "GA"
  },
  {
    "name": "appengine.operations.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "appengine.runtimes.actAsAdmin",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "name": "appengine.services.delete",
    "stage": "GA"
  },
  {
    "name": "appengine.services.get",
    "stage": "GA"
  },
  {
    "name": "appengine.services.list",
    "stage": "GA"
  },
  {
    "name": "appengine.services.update",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.create",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.delete",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.get",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.getFileContents",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.list",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.files.get",
    "stage": "BETA",
    "title": "Get File"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.files.list",
    "stage": "BETA",
    "title": "List Files"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.packages.delete",
    "stage": "BETA",
    "title": "Delete Package"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.packages.get",
    "stage": "BETA",
    "title": "Get Package"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.packages.list",
    "stage": "BETA",
    "title": "List Packages"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.create",
    "stage": "BETA",
    "title": "Create Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.delete",
    "stage": "BETA",
    "title": "Delete Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.deleteArtifacts",
    "stage": "BETA",
    "title": "Delete Artifacts from a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.downloadArtifacts",
    "stage": "BETA",
    "title": "Download Artifacts from a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.get",
    "stage": "BETA",
    "title": "Get Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.getIamPolicy",
    "stage": "BETA",
    "title": "Get a Repository IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.list",
    "stage": "BETA",
    "title": "List Repositories"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.setIamPolicy",
    "stage": "BETA",
    "title": "Set a Repository IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.update",
    "stage": "BETA",
    "title": "Update Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.uploadArtifacts",
    "stage": "BETA",
    "title": "Upload Artifacts into a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.create",
    "stage": "BETA",
    "title": "Create Tag"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.delete",
    "stage": "BETA",
    "title": "Delete Tag"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.get",
    "stage": "BETA",
    "title": "Get Tag"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.list",
    "stage": "BETA",
    "title": "List Tags"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.update",
    "stage": "BETA",
    "title": "Update Tag"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.versions.delete",
    "stage": "BETA",
    "title": "Delete Version"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.versions.get",
    "stage": "BETA",
    "title": "Get Version"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.versions.list",
    "stage": "BETA",
    "title": "List Versions"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.create",
    "stage": "BETA",
    "title": "Create annotationspec"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.delete",
    "stage": "BETA",
    "title": "Delete annotationspec"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.get",
    "stage": "BETA",
    "title": "Get annotationspec"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.list",
    "stage": "BETA",
    "title": "List annotationspecs"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.update",
    "stage": "BETA",
    "title": "Update annotationspec"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.approve",
    "stage": "BETA",
    "title": "Approve annotation"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.create",
    "stage": "BETA",
    "title": "Create annotation"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.list",
    "stage": "BETA",
    "title": "List annotations"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.manipulate",
    "stage": "BETA",
    "title": "Manipulate annotation"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.reject",
    "stage": "BETA",
    "title": "Reject annotation"
  },
  {
    "apiDisabled": true,
    "name": "automl.columnSpecs.get",
    "stage": "BETA",
    "title": "Get columnspec"
  },
  {
    "apiDisabled": true,
    "name": "automl.columnSpecs.list",
    "stage": "BETA",
    "title": "List columnspecs"
  },
  {
    "apiDisabled": true,
    "name": "automl.columnSpecs.update",
    "stage": "BETA",
    "title": "Update columnspec"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.create",
    "stage": "BETA",
    "title": "Create dataset"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.delete",
    "stage": "BETA",
    "title": "Delete dataset"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.export",
    "stage": "BETA",
    "title": "Export dataset"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.get",
    "stage": "BETA",
    "title": "Get dataset"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.import",
    "stage": "BETA",
    "title": "Import dataset"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.list",
    "stage": "BETA",
    "title": "List datasets"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.update",
    "stage": "BETA",
    "title": "Update dataset"
  },
  {
    "apiDisabled": true,
    "name": "automl.examples.delete",
    "stage": "BETA",
    "title": "Delete example"
  },
  {
    "apiDisabled": true,
    "name": "automl.examples.get",
    "stage": "BETA",
    "title": "Get example"
  },
  {
    "apiDisabled": true,
    "name": "automl.examples.list",
    "stage": "BETA",
    "title": "List examples"
  },
  {
    "apiDisabled": true,
    "name": "automl.humanAnnotationTasks.create",
    "stage": "BETA",
    "title": "Create humanAnnotationTask"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automl.humanAnnotationTasks.delete",
    "stage": "BETA",
    "title": "Delete humanAnnotationTask"
  },
  {
    "apiDisabled": true,
    "name": "automl.humanAnnotationTasks.get",
    "stage": "BETA",
    "title": "Get humanAnnotationTask"
  },
  {
    "apiDisabled": true,
    "name": "automl.humanAnnotationTasks.list",
    "stage": "BETA",
    "title": "List humanAnnotationTasks"
  },
  {
    "apiDisabled": true,
    "name": "automl.locations.get",
    "stage": "BETA",
    "title": "Get AutoML Location"
  },
  {
    "apiDisabled": true,
    "name": "automl.locations.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.locations.list",
    "stage": "BETA",
    "title": "List AutoML Locations"
  },
  {
    "apiDisabled": true,
    "name": "automl.locations.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automl.modelEvaluations.create",
    "stage": "BETA",
    "title": "Create modelEvaluation"
  },
  {
    "apiDisabled": true,
    "name": "automl.modelEvaluations.get",
    "stage": "BETA",
    "title": "Get modelEvaluation"
  },
  {
    "apiDisabled": true,
    "name": "automl.modelEvaluations.list",
    "stage": "BETA",
    "title": "List modelEvaluations"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.create",
    "stage": "BETA",
    "title": "Create model"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.delete",
    "stage": "BETA",
    "title": "Delete model"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.deploy",
    "stage": "BETA",
    "title": "Deploy model"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.export",
    "stage": "BETA",
    "title": "Export Model"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.get",
    "stage": "BETA",
    "title": "Get model"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.list",
    "stage": "BETA",
    "title": "List models"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.predict",
    "stage": "BETA",
    "title": "Predict using a model"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.undeploy",
    "stage": "BETA",
    "title": "Undeploy model"
  },
  {
    "apiDisabled": true,
    "name": "automl.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "automl.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "automl.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "automl.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "automl.tableSpecs.get",
    "stage": "BETA",
    "title": "Get tablespec"
  },
  {
    "apiDisabled": true,
    "name": "automl.tableSpecs.list",
    "stage": "BETA",
    "title": "List tablespecs"
  },
  {
    "apiDisabled": true,
    "name": "automl.tableSpecs.update",
    "stage": "BETA",
    "title": "Update tablespec"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.apiKeys.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.apiKeys.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.apiKeys.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.catalogs.getStats",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.catalogs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.eventStores.getStats",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.events.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.events.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.events.purge",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.placements.getStats",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.placements.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.recommendations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "axt.labels.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "axt.labels.set",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.bireservations.get",
    "stage": "BETA",
    "title": "Read BI reservations"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.bireservations.update",
    "stage": "BETA",
    "title": "Update BI reservations"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.capacityCommitments.create",
    "stage": "BETA",
    "title": "Create new capacity commitments"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.capacityCommitments.delete",
    "stage": "BETA",
    "title": "Delete capacity commitment"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.capacityCommitments.get",
    "stage": "BETA",
    "title": "Get capacity commitment data"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.capacityCommitments.list",
    "stage": "BETA",
    "title": "List capacity commitments"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.config.get",
    "stage": "GA",
    "title": "Get bigquery configurations"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.config.update",
    "stage": "GA",
    "title": "Update bigquery configurations"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.connections.create",
    "stage": "BETA",
    "title": "Create connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.connections.delete",
    "stage": "BETA",
    "title": "Delete connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.connections.get",
    "stage": "BETA",
    "title": "Get connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.connections.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.connections.list",
    "stage": "BETA",
    "title": "List connections"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.connections.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.connections.update",
    "stage": "BETA",
    "title": "Update connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.connections.use",
    "stage": "BETA",
    "title": "Use connection to access the external database"
  },
  {
    "name": "bigquery.datasets.create",
    "stage": "GA",
    "title": "Create new empty datasets"
  },
  {
    "name": "bigquery.datasets.delete",
    "stage": "GA",
    "title": "Delete dataset"
  },
  {
    "name": "bigquery.datasets.get",
    "stage": "GA",
    "title": "Get dataset data and metadata"
  },
  {
    "name": "bigquery.datasets.getIamPolicy",
    "stage": "GA",
    "title": "Read IAM Policy"
  },
  {
    "name": "bigquery.datasets.setIamPolicy",
    "stage": "GA",
    "title": "Change IAM Policy"
  },
  {
    "name": "bigquery.datasets.update",
    "stage": "GA",
    "title": "Update dataset data and metadata"
  },
  {
    "name": "bigquery.datasets.updateTag",
    "stage": "BETA",
    "title": "Update Tags"
  },
  {
    "name": "bigquery.jobs.create",
    "stage": "GA",
    "title": "Create new jobs"
  },
  {
    "name": "bigquery.jobs.get",
    "stage": "GA",
    "title": "Get any job data and metadata"
  },
  {
    "name": "bigquery.jobs.list",
    "stage": "GA",
    "title": "List all jobs and retrieve metadata on any job"
  },
  {
    "name": "bigquery.jobs.listAll",
    "stage": "GA",
    "title": "List all jobs and retrieve metadata on any job for any user"
  },
  {
    "name": "bigquery.jobs.update",
    "stage": "GA",
    "title": "Update any job data and metadata"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.models.create",
    "stage": "BETA",
    "title": "Create new models"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.models.delete",
    "stage": "BETA",
    "title": "Delete model"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.models.getData",
    "stage": "BETA",
    "title": "Get model data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.models.getMetadata",
    "stage": "BETA",
    "title": "Get model metadata"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.models.list",
    "stage": "BETA",
    "title": "List models and metadata on models"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.models.updateData",
    "stage": "BETA",
    "title": "Update model data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.models.updateMetadata",
    "stage": "BETA",
    "title": "Update model metadata"
  },
  {
    "name": "bigquery.models.updateTag",
    "stage": "BETA",
    "title": "Update Tags"
  },
  {
    "name": "bigquery.readsessions.create",
    "stage": "GA",
    "title": "Create new read sessions"
  },
  {
    "name": "bigquery.readsessions.getData",
    "stage": "GA",
    "title": "Read data from read sessions"
  },
  {
    "name": "bigquery.readsessions.update",
    "stage": "GA",
    "title": "Update read sessions"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservationAssignments.create",
    "stage": "BETA",
    "title": "Create new reservation assignments"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservationAssignments.delete",
    "stage": "BETA",
    "title": "Delete reservation assignments"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservationAssignments.list",
    "stage": "BETA",
    "title": "List reservation assignments"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservationAssignments.search",
    "stage": "BETA",
    "title": "Look up assignments for a specified resource"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservations.create",
    "stage": "BETA",
    "title": "Create new reservations"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservations.delete",
    "stage": "BETA",
    "title": "Delete reservation"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservations.get",
    "stage": "BETA",
    "title": "Get reservation data"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservations.list",
    "stage": "BETA",
    "title": "List reservations"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.reservations.update",
    "stage": "BETA",
    "title": "Update reservation data"
  },
  {
    "name": "bigquery.routines.create",
    "stage": "BETA",
    "title": "Create new routines"
  },
  {
    "name": "bigquery.routines.delete",
    "stage": "BETA",
    "title": "Delete routine"
  },
  {
    "name": "bigquery.routines.get",
    "stage": "BETA",
    "title": "Get routine metadata and definition"
  },
  {
    "name": "bigquery.routines.list",
    "stage": "BETA",
    "title": "List routines and metadata on routines"
  },
  {
    "name": "bigquery.routines.update",
    "stage": "BETA",
    "title": "Update routine metadata and definition"
  },
  {
    "name": "bigquery.savedqueries.create",
    "stage": "GA",
    "title": "Create new saved queries in a project"
  },
  {
    "name": "bigquery.savedqueries.delete",
    "stage": "GA",
    "title": "Delete saved query"
  },
  {
    "name": "bigquery.savedqueries.get",
    "stage": "GA",
    "title": "Get saved query metadata and content"
  },
  {
    "name": "bigquery.savedqueries.list",
    "stage": "GA",
    "title": "List saved queries in a project"
  },
  {
    "name": "bigquery.savedqueries.update",
    "stage": "GA",
    "title": "Update saved query"
  },
  {
    "name": "bigquery.tables.create",
    "stage": "GA",
    "title": "Create new tables"
  },
  {
    "name": "bigquery.tables.delete",
    "stage": "GA",
    "title": "Delete table"
  },
  {
    "name": "bigquery.tables.export",
    "stage": "GA",
    "title": "Export table data outside of bigquery"
  },
  {
    "name": "bigquery.tables.get",
    "stage": "GA",
    "title": "Get table metadata"
  },
  {
    "name": "bigquery.tables.getData",
    "stage": "GA",
    "title": "Get table data"
  },
  {
    "name": "bigquery.tables.list",
    "stage": "GA",
    "title": "List tables and metadata on tables"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.tables.setCategory",
    "stage": "BETA",
    "title": "Set categories in table schema"
  },
  {
    "name": "bigquery.tables.update",
    "stage": "GA",
    "title": "Update table metadata"
  },
  {
    "name": "bigquery.tables.updateData",
    "stage": "GA",
    "title": "Update table data"
  },
  {
    "name": "bigquery.tables.updateTag",
    "stage": "BETA",
    "title": "Update Tags"
  },
  {
    "name": "bigquery.transfers.get",
    "stage": "GA",
    "title": "Get data transfer configurations"
  },
  {
    "name": "bigquery.transfers.update",
    "stage": "GA",
    "title": "Create data transfer configurations"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.checkConsistency",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.generateConsistencyToken",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.mutateRows",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.readRows",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.sampleRowKeys",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.update",
    "stage": "GA"
  },
  {
    "name": "billing.resourceCosts.get",
    "stage": "GA",
    "title": "Get costs scoped to a specific resource (e.g. project)"
  },
  {
    "name": "binaryauthorization.attestors.create",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.attestors.delete",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.attestors.get",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.attestors.getIamPolicy",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.attestors.list",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.attestors.setIamPolicy",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.attestors.update",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.attestors.verifyImageAttested",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.policy.get",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.policy.getIamPolicy",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.policy.setIamPolicy",
    "stage": "BETA"
  },
  {
    "name": "binaryauthorization.policy.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "chat.bots.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "chat.bots.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.create",
    "stage": "BETA",
    "title": "Create brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.delete",
    "stage": "BETA",
    "title": "Delete brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.get",
    "stage": "BETA",
    "title": "Get brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.list",
    "stage": "BETA",
    "title": "List brands associated with a project"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.update",
    "stage": "BETA",
    "title": "Update brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.create",
    "stage": "BETA",
    "title": "Create OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.createSecret",
    "stage": "BETA",
    "title": "Create new client secret"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.delete",
    "stage": "BETA",
    "title": "Delete OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.get",
    "stage": "BETA",
    "title": "Get OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.getWithSecret",
    "stage": "BETA",
    "title": "Get OAuth client with client secret"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.list",
    "stage": "BETA",
    "title": "List OAuth clients in a brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.listWithSecrets",
    "stage": "BETA",
    "title": "List OAuth clients in a brand with client secrets"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.undelete",
    "stage": "BETA",
    "title": "Undelete OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.update",
    "stage": "BETA",
    "title": "Update OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportAccessLevel",
    "stage": "BETA",
    "title": "List Access Level data"
  },
  {
    "name": "cloudasset.assets.exportAccessPolicy",
    "stage": "BETA",
    "title": "List Access policy data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportAllAccessPolicy",
    "stage": "BETA",
    "title": "List All Access policy data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportAppengineApplications",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportAppengineServices",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportAppengineVersions",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportBigqueryDatasets",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportBigqueryTables",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportBigtableCluster",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportBigtableInstance",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportBigtableTable",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportCloudbillingBillingAccounts",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportCloudkmsCryptoKeys",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportCloudkmsKeyRings",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportCloudresourcemanagerFolders",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportCloudresourcemanagerOrganizations",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportCloudresourcemanagerProjects",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeAddress",
    "stage": "BETA",
    "title": "List Compute Address data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeAutoscalers",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeBackendBuckets",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeBackendServices",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeDisks",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeFirewalls",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeForwardingRules",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeGlobalAddress",
    "stage": "BETA",
    "title": "List Compute GlobalAddress data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeGlobalForwardingRules",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeHealthChecks",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeHttpHealthChecks",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeHttpsHealthChecks",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeImages",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeInstanceGroupManagers",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeInstanceGroups",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeInstanceTemplates",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeInstances",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeInterconnect",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeInterconnectAttachment",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeLicenses",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeNetworks",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeProjects",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeRegionAutoscaler",
    "stage": "BETA",
    "title": "List Compute RegionAutoscaler data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeRegionBackendServices",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeRegionDisk",
    "stage": "BETA",
    "title": "List Compute RegionDisk data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeRegionInstanceGroup",
    "stage": "BETA",
    "title": "List Compute RegionInstanceGroup data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeRegionInstanceGroupManager",
    "stage": "BETA",
    "title": "List Compute RegionInstanceGroupManager data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeRouters",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeRoutes",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeSecurityPolicy",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeSnapshots",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeSslCertificates",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeSubnetworks",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeTargetHttpProxies",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeTargetHttpsProxies",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeTargetInstances",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeTargetPools",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeTargetSslProxies",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeTargetTcpProxies",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeTargetVpnGateways",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeUrlMaps",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportComputeVpnTunnels",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerClusterrole",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerClusterrolebinding",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerClusters",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerNamespace",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerNode",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerNodepool",
    "stage": "BETA",
    "title": "List Container Nodepool data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerPod",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerRole",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerRolebinding",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportContainerregistryImage",
    "stage": "BETA",
    "title": "List Containerregistry Image data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportDatafusionInstance",
    "stage": "BETA",
    "title": "List Datafusion instance data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportDataprocClusters",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportDataprocJobs",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportDnsManagedZones",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportDnsPolicies",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "name": "cloudasset.assets.exportIamPolicy",
    "stage": "GA",
    "title": "List IAM policy data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIamRoles",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIamServiceAccountKeys",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIamServiceAccounts",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportManagedidentitiesDomain",
    "stage": "BETA",
    "title": "List Managed identities data"
  },
  {
    "name": "cloudasset.assets.exportOrgPolicy",
    "stage": "BETA",
    "title": "List Org policy data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportPubsubSubscriptions",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportPubsubTopics",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "name": "cloudasset.assets.exportResource",
    "stage": "GA",
    "title": "List resource data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportServicePerimeter",
    "stage": "BETA",
    "title": "List Service perimeter data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportServicemanagementServices",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportSpannerDatabases",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportSpannerInstances",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportSqladminInstances",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportStorageBuckets",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.searchAllIamPolicies",
    "title": "Search IAM policies under a organization/folder/project"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.searchAllResources",
    "title": "Search resources under a organization/folder/project"
  },
  {
    "name": "cloudasset.feeds.create",
    "stage": "GA",
    "title": "Create Feed"
  },
  {
    "name": "cloudasset.feeds.delete",
    "stage": "GA",
    "title": "Delete Feed"
  },
  {
    "name": "cloudasset.feeds.get",
    "stage": "GA",
    "title": "Get Feed"
  },
  {
    "name": "cloudasset.feeds.list",
    "stage": "GA",
    "title": "List Feed"
  },
  {
    "name": "cloudasset.feeds.update",
    "stage": "GA",
    "title": "Update Feed"
  },
  {
    "name": "cloudbuild.builds.create",
    "stage": "GA",
    "title": "Create Build"
  },
  {
    "name": "cloudbuild.builds.get",
    "stage": "GA",
    "title": "Read Build"
  },
  {
    "name": "cloudbuild.builds.list",
    "stage": "GA",
    "title": "List Builds"
  },
  {
    "name": "cloudbuild.builds.update",
    "stage": "GA",
    "title": "Update Build"
  },
  {
    "apiDisabled": true,
    "name": "cloudconfig.configs.get",
    "stage": "GA",
    "title": "Read config template"
  },
  {
    "apiDisabled": true,
    "name": "cloudconfig.configs.update",
    "stage": "GA",
    "title": "Write config template"
  },
  {
    "name": "clouddebugger.breakpoints.create",
    "stage": "BETA",
    "title": "Set a Breakpoint"
  },
  {
    "name": "clouddebugger.breakpoints.delete",
    "stage": "BETA",
    "title": "Delete a Breakpoint"
  },
  {
    "name": "clouddebugger.breakpoints.get",
    "stage": "BETA",
    "title": "Get a Breakpoint"
  },
  {
    "name": "clouddebugger.breakpoints.list",
    "stage": "BETA",
    "title": "List Breakpoints"
  },
  {
    "name": "clouddebugger.breakpoints.listActive",
    "stage": "BETA",
    "title": "List Active Breakpoints"
  },
  {
    "name": "clouddebugger.breakpoints.update",
    "stage": "BETA",
    "title": "Update a Breakpoint"
  },
  {
    "name": "clouddebugger.debuggees.create",
    "stage": "BETA",
    "title": "Register a Debuggee"
  },
  {
    "name": "clouddebugger.debuggees.list",
    "stage": "BETA",
    "title": "List Debuggees"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.functions.call",
    "stage": "BETA",
    "title": "Call Cloud Function"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.functions.create",
    "stage": "BETA",
    "title": "Create Cloud Function"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.functions.delete",
    "stage": "BETA",
    "title": "Delete Cloud Function"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.functions.get",
    "stage": "BETA",
    "title": "Get Cloud Function"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.getIamPolicy",
    "stage": "BETA",
    "title": "Get Cloud Function IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.invoke",
    "stage": "BETA",
    "title": "Invoke Cloud Function"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.functions.list",
    "stage": "BETA",
    "title": "List Cloud Functions"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.setIamPolicy",
    "stage": "BETA",
    "title": "Set Cloud Function IAM Policy"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.functions.sourceCodeGet",
    "stage": "BETA",
    "title": "Get Cloud Function Source Code"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.functions.sourceCodeSet",
    "stage": "BETA",
    "title": "Set Cloud Function Source Code"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.functions.update",
    "stage": "BETA",
    "title": "Update Cloud Function"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudfunctions.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.bindGateway",
    "stage": "GA",
    "title": "Bind Device to Gateway"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.create",
    "stage": "GA",
    "title": "Create Devices"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.delete",
    "stage": "GA",
    "title": "Delete Devices"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.get",
    "stage": "GA",
    "title": "Read Devices"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.list",
    "stage": "GA",
    "title": "List Devices"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.sendCommand",
    "stage": "GA",
    "title": "Send Commands to Devices"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.unbindGateway",
    "stage": "GA",
    "title": "Unbind Device from Gateway"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.update",
    "stage": "GA",
    "title": "Update Devices"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.devices.updateConfig",
    "stage": "GA",
    "title": "Update Device Configurations"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.registries.create",
    "stage": "GA",
    "title": "Create Device Registries"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.registries.delete",
    "stage": "GA",
    "title": "Delete Device Registries"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.registries.get",
    "stage": "GA",
    "title": "Read Device Registries"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.registries.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.registries.list",
    "stage": "GA",
    "title": "List Device Registries"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.registries.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudiot.registries.update",
    "stage": "GA",
    "title": "Update Device Registries"
  },
  {
    "apiDisabled": true,
    "name": "cloudiottoken.tokensettings.get",
    "stage": "BETA",
    "title": "Get Token Settings"
  },
  {
    "apiDisabled": true,
    "name": "cloudiottoken.tokensettings.update",
    "stage": "BETA",
    "title": "Update Token Settings"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.events.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.search",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.search",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tenants.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tenants.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tenants.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tenants.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tools.access",
    "stage": "GA"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.create",
    "stage": "GA",
    "title": "Create Key Version"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.destroy",
    "stage": "GA",
    "title": "Destroy CryptoKeyVersion Material"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.get",
    "stage": "GA",
    "title": "Get CryptoKeyVersion Metadata"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.list",
    "stage": "GA",
    "title": "List CryptoKeyVersions"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.restore",
    "stage": "GA",
    "title": "Restore CryptoKeyVersion"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.update",
    "stage": "GA",
    "title": "Update CryptoKeyVersion"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.useToDecrypt",
    "stage": "GA",
    "title": "Decrypt with CryptoKeyVersion"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.useToEncrypt",
    "stage": "GA",
    "title": "Encrypt with CryptoKeyVersion"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.useToSign",
    "stage": "GA",
    "title": "Sign with CryptoKeyVersion"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.viewPublicKey",
    "stage": "GA",
    "title": "Get CryptoKeyVersion public key"
  },
  {
    "name": "cloudkms.cryptoKeys.create",
    "stage": "GA",
    "title": "Create CryptoKey"
  },
  {
    "name": "cloudkms.cryptoKeys.get",
    "stage": "GA",
    "title": "Get CryptoKey"
  },
  {
    "name": "cloudkms.cryptoKeys.getIamPolicy",
    "stage": "GA",
    "title": "Get CryptoKey Policy"
  },
  {
    "name": "cloudkms.cryptoKeys.list",
    "stage": "GA",
    "title": "List CryptoKeys"
  },
  {
    "name": "cloudkms.cryptoKeys.setIamPolicy",
    "stage": "GA",
    "title": "Set CryptoKey Policy"
  },
  {
    "name": "cloudkms.cryptoKeys.update",
    "stage": "GA",
    "title": "Update CryptoKey"
  },
  {
    "name": "cloudkms.importJobs.create",
    "stage": "GA",
    "title": "Create ImportJob"
  },
  {
    "name": "cloudkms.importJobs.get",
    "stage": "GA",
    "title": "Get ImportJob"
  },
  {
    "name": "cloudkms.importJobs.getIamPolicy",
    "stage": "GA",
    "title": "Get ImportJob Policy"
  },
  {
    "name": "cloudkms.importJobs.list",
    "stage": "GA",
    "title": "List ImportJobs"
  },
  {
    "name": "cloudkms.importJobs.setIamPolicy",
    "stage": "GA",
    "title": "Set ImportJob Policy"
  },
  {
    "name": "cloudkms.importJobs.useToImport",
    "stage": "GA",
    "title": "Import CryptoKeyVersion"
  },
  {
    "name": "cloudkms.keyRings.create",
    "stage": "GA",
    "title": "Create KeyRing"
  },
  {
    "name": "cloudkms.keyRings.get",
    "stage": "GA",
    "title": "Get KeyRing"
  },
  {
    "name": "cloudkms.keyRings.getIamPolicy",
    "stage": "GA",
    "title": "Get KeyRing Policy"
  },
  {
    "name": "cloudkms.keyRings.list",
    "stage": "GA",
    "title": "List KeyRings"
  },
  {
    "name": "cloudkms.keyRings.setIamPolicy",
    "stage": "GA",
    "title": "Set KeyRing Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudmessaging.messages.create",
    "stage": "GA",
    "title": "Send Firebase Cloud Messaging message"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "cloudmigration.velostrataendpoints.connect",
    "onlyInPredefinedRoles": true,
    "stage": "BETA"
  },
  {
    "name": "cloudnotifications.activities.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalog.targets.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.targets.associate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.targets.unassociate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudprofiler.profiles.create",
    "stage": "BETA",
    "title": "Create Profile"
  },
  {
    "apiDisabled": true,
    "name": "cloudprofiler.profiles.list",
    "stage": "BETA",
    "title": "List Profiles"
  },
  {
    "apiDisabled": true,
    "name": "cloudprofiler.profiles.update",
    "stage": "BETA",
    "title": "Update Profile"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.create",
    "stage": "BETA",
    "title": "Create Job"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.delete",
    "stage": "BETA",
    "title": "Delete Job"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.enable",
    "stage": "BETA",
    "title": "Enable Job"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.fullView",
    "stage": "BETA",
    "title": "Full Job View"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.get",
    "stage": "BETA",
    "title": "Get Job"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.list",
    "stage": "BETA",
    "title": "List Jobs"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.pause",
    "stage": "BETA",
    "title": "Pause Job"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.run",
    "stage": "BETA",
    "title": "Run Job"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.jobs.update",
    "stage": "BETA",
    "title": "Update Job"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudscheduler.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "name": "cloudsecurityscanner.crawledurls.list",
    "stage": "GA",
    "title": "List crawled urls"
  },
  {
    "name": "cloudsecurityscanner.results.get",
    "stage": "GA",
    "title": "Get a scan result"
  },
  {
    "name": "cloudsecurityscanner.results.list",
    "stage": "GA",
    "title": "List scan results"
  },
  {
    "name": "cloudsecurityscanner.scanruns.get",
    "stage": "GA",
    "title": "Get a scanrun"
  },
  {
    "name": "cloudsecurityscanner.scanruns.getSummary",
    "stage": "GA",
    "title": "Get a summary of results of a scanrun"
  },
  {
    "name": "cloudsecurityscanner.scanruns.list",
    "stage": "GA",
    "title": "List scanruns"
  },
  {
    "name": "cloudsecurityscanner.scanruns.stop",
    "stage": "GA",
    "title": "Stop a scanrun"
  },
  {
    "name": "cloudsecurityscanner.scans.create",
    "stage": "GA",
    "title": "Create a scan"
  },
  {
    "name": "cloudsecurityscanner.scans.delete",
    "stage": "GA",
    "title": "Delete a scan"
  },
  {
    "name": "cloudsecurityscanner.scans.get",
    "stage": "GA",
    "title": "Get a scan"
  },
  {
    "name": "cloudsecurityscanner.scans.list",
    "stage": "GA",
    "title": "List scans"
  },
  {
    "name": "cloudsecurityscanner.scans.run",
    "stage": "GA",
    "title": "Run a scan"
  },
  {
    "name": "cloudsecurityscanner.scans.update",
    "stage": "GA",
    "title": "Update a scan"
  },
  {
    "name": "cloudsql.backupRuns.create",
    "stage": "GA"
  },
  {
    "name": "cloudsql.backupRuns.delete",
    "stage": "GA"
  },
  {
    "name": "cloudsql.backupRuns.get",
    "stage": "GA"
  },
  {
    "name": "cloudsql.backupRuns.list",
    "stage": "GA"
  },
  {
    "name": "cloudsql.databases.create",
    "stage": "GA"
  },
  {
    "name": "cloudsql.databases.delete",
    "stage": "GA"
  },
  {
    "name": "cloudsql.databases.get",
    "stage": "GA"
  },
  {
    "name": "cloudsql.databases.list",
    "stage": "GA"
  },
  {
    "name": "cloudsql.databases.update",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.addServerCa",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.clone",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.connect",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.create",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.delete",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.demoteMaster",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.export",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.failover",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.get",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.import",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.list",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.listServerCas",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.promoteReplica",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.resetSslConfig",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.restart",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.restoreBackup",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.rotateServerCa",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.startReplica",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.stopReplica",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.truncateLog",
    "stage": "GA"
  },
  {
    "name": "cloudsql.instances.update",
    "stage": "GA"
  },
  {
    "name": "cloudsql.sslCerts.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "cloudsql.sslCerts.createEphemeral",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "name": "cloudsql.sslCerts.delete",
    "stage": "GA"
  },
  {
    "name": "cloudsql.sslCerts.get",
    "stage": "GA"
  },
  {
    "name": "cloudsql.sslCerts.list",
    "stage": "GA"
  },
  {
    "name": "cloudsql.users.create",
    "stage": "GA"
  },
  {
    "name": "cloudsql.users.delete",
    "stage": "GA"
  },
  {
    "name": "cloudsql.users.list",
    "stage": "GA"
  },
  {
    "name": "cloudsql.users.update",
    "stage": "GA"
  },
  {
    "name": "cloudsupport.properties.get",
    "stage": "GA",
    "title": "View support properties"
  },
  {
    "name": "cloudsupport.techCases.create",
    "stage": "GA",
    "title": "Create Tech Support Cases"
  },
  {
    "name": "cloudsupport.techCases.escalate",
    "stage": "GA",
    "title": "Escalate Tech Support Cases"
  },
  {
    "name": "cloudsupport.techCases.get",
    "stage": "GA",
    "title": "Read Tech Support Cases"
  },
  {
    "name": "cloudsupport.techCases.list",
    "stage": "GA",
    "title": "List Tech Support Cases"
  },
  {
    "name": "cloudsupport.techCases.update",
    "stage": "GA",
    "title": "Update Tech Support Cases"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.create",
    "stage": "BETA",
    "title": "Create Queue"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.delete",
    "stage": "BETA",
    "title": "Delete Queue"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.get",
    "stage": "BETA",
    "title": "Get Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.getIamPolicy",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.list",
    "stage": "BETA",
    "title": "List Queues"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.pause",
    "stage": "BETA",
    "title": "Pause Queue"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.purge",
    "stage": "BETA",
    "title": "Purge Queue"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.resume",
    "stage": "BETA",
    "title": "Resume Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.setIamPolicy",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.update",
    "stage": "BETA",
    "title": "Update Queue"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.create",
    "stage": "BETA",
    "title": "Create Task"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.delete",
    "stage": "BETA",
    "title": "Delete Task"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.fullView",
    "stage": "BETA",
    "title": "Full Task View"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.get",
    "stage": "BETA",
    "title": "Get Task"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.list",
    "stage": "BETA",
    "title": "List Tasks"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.run",
    "stage": "BETA",
    "title": "Run Task"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtestservice.environmentcatalog.get",
    "stage": "GA",
    "title": "Get the test environment catalog"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtestservice.matrices.create",
    "stage": "GA",
    "title": "Create a matrix"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtestservice.matrices.get",
    "stage": "GA",
    "title": "Get a matrix"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtestservice.matrices.update",
    "stage": "GA",
    "title": "Update a matrix"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.executions.create",
    "stage": "GA",
    "title": "Create an execution"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.executions.get",
    "stage": "GA",
    "title": "Get an execution"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.executions.list",
    "stage": "GA",
    "title": "List executions"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.executions.update",
    "stage": "GA",
    "title": "Update an execution"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.histories.create",
    "stage": "GA",
    "title": "Create a history"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.histories.get",
    "stage": "GA",
    "title": "Get a history"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.histories.list",
    "stage": "GA",
    "title": "List histories"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.settings.create",
    "stage": "GA",
    "title": "Create or initialize project tool results settings"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.settings.get",
    "stage": "GA",
    "title": "Get project tool results settings"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.settings.update",
    "stage": "GA",
    "title": "Update tool results settings for a project"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.steps.create",
    "stage": "GA",
    "title": "Create a step"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.steps.get",
    "stage": "GA",
    "title": "Get a step"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.steps.list",
    "stage": "GA",
    "title": "List steps"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.steps.update",
    "stage": "GA",
    "title": "Update a step"
  },
  {
    "name": "cloudtrace.insights.get",
    "stage": "GA",
    "title": "Get Insights for a Trace"
  },
  {
    "name": "cloudtrace.insights.list",
    "stage": "GA",
    "title": "List Insights for Traces"
  },
  {
    "name": "cloudtrace.stats.get",
    "stage": "GA",
    "title": "Get Stats for a Project"
  },
  {
    "name": "cloudtrace.tasks.create",
    "stage": "GA",
    "title": "Create a Task"
  },
  {
    "name": "cloudtrace.tasks.delete",
    "stage": "GA",
    "title": "Delete a Task"
  },
  {
    "name": "cloudtrace.tasks.get",
    "stage": "GA",
    "title": "Get a Task"
  },
  {
    "name": "cloudtrace.tasks.list",
    "stage": "GA",
    "title": "List Tasks"
  },
  {
    "name": "cloudtrace.traces.get",
    "stage": "GA",
    "title": "Get a Trace"
  },
  {
    "name": "cloudtrace.traces.list",
    "stage": "GA",
    "title": "List Traces"
  },
  {
    "name": "cloudtrace.traces.patch",
    "stage": "GA",
    "title": "Patch Traces"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.generalModels.batchPredict",
    "stage": "GA",
    "title": "Batch predict using a general translation model"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.generalModels.get",
    "stage": "GA",
    "title": "Get model"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.generalModels.predict",
    "stage": "GA",
    "title": "Predict using a general translation model"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.batchPredict",
    "stage": "GA",
    "title": "Batch predict using a glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.create",
    "stage": "GA",
    "title": "Create glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.delete",
    "stage": "GA",
    "title": "Delete glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.get",
    "stage": "GA",
    "title": "Get glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.list",
    "stage": "GA",
    "title": "List glossaries"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.predict",
    "stage": "GA",
    "title": "Predict using a glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.languageDetectionModels.predict",
    "stage": "GA",
    "title": "Detect language"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.locations.get",
    "stage": "GA",
    "title": "Get Translation Location"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.locations.list",
    "stage": "GA",
    "title": "List Translation Locations"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.list",
    "stage": "GA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.wait",
    "stage": "GA",
    "title": "Wait for Operation"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.create",
    "stage": "GA",
    "title": "Create Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.delete",
    "stage": "GA",
    "title": "Delete Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.get",
    "stage": "GA",
    "title": "Read Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.list",
    "stage": "GA",
    "title": "List Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.update",
    "stage": "GA",
    "title": "Update Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.imageversions.list",
    "stage": "GA",
    "title": "List Composer Image Versions"
  },
  {
    "apiDisabled": true,
    "name": "composer.operations.delete",
    "stage": "GA",
    "title": "Delete Composer operations"
  },
  {
    "apiDisabled": true,
    "name": "composer.operations.get",
    "stage": "GA",
    "title": "Read Composer operations"
  },
  {
    "apiDisabled": true,
    "name": "composer.operations.list",
    "stage": "GA",
    "title": "List Composer operations"
  },
  {
    "name": "compute.acceleratorTypes.get",
    "stage": "GA"
  },
  {
    "name": "compute.acceleratorTypes.list",
    "stage": "GA"
  },
  {
    "name": "compute.addresses.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.addresses.createInternal",
    "stage": "GA"
  },
  {
    "name": "compute.addresses.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.addresses.deleteInternal",
    "stage": "GA"
  },
  {
    "name": "compute.addresses.get",
    "stage": "GA"
  },
  {
    "name": "compute.addresses.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.addresses.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.addresses.use",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.addresses.useInternal",
    "stage": "GA"
  },
  {
    "name": "compute.autoscalers.create",
    "stage": "GA"
  },
  {
    "name": "compute.autoscalers.delete",
    "stage": "GA"
  },
  {
    "name": "compute.autoscalers.get",
    "stage": "GA"
  },
  {
    "name": "compute.autoscalers.list",
    "stage": "GA"
  },
  {
    "name": "compute.autoscalers.update",
    "stage": "GA"
  },
  {
    "name": "compute.backendBuckets.create",
    "stage": "GA"
  },
  {
    "name": "compute.backendBuckets.delete",
    "stage": "GA"
  },
  {
    "name": "compute.backendBuckets.get",
    "stage": "GA"
  },
  {
    "name": "compute.backendBuckets.list",
    "stage": "GA"
  },
  {
    "name": "compute.backendBuckets.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.backendBuckets.use",
    "stage": "GA"
  },
  {
    "name": "compute.backendServices.create",
    "stage": "GA"
  },
  {
    "name": "compute.backendServices.delete",
    "stage": "GA"
  },
  {
    "name": "compute.backendServices.get",
    "stage": "GA"
  },
  {
    "name": "compute.backendServices.list",
    "stage": "GA"
  },
  {
    "name": "compute.backendServices.setSecurityPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.backendServices.update",
    "stage": "GA"
  },
  {
    "name": "compute.backendServices.use",
    "stage": "GA"
  },
  {
    "name": "compute.commitments.create",
    "stage": "GA"
  },
  {
    "name": "compute.commitments.get",
    "stage": "GA"
  },
  {
    "name": "compute.commitments.list",
    "stage": "GA"
  },
  {
    "name": "compute.diskTypes.get",
    "stage": "GA"
  },
  {
    "name": "compute.diskTypes.list",
    "stage": "GA"
  },
  {
    "name": "compute.disks.addResourcePolicies",
    "stage": "GA"
  },
  {
    "name": "compute.disks.create",
    "stage": "GA"
  },
  {
    "name": "compute.disks.createSnapshot",
    "stage": "GA"
  },
  {
    "name": "compute.disks.delete",
    "stage": "GA"
  },
  {
    "name": "compute.disks.get",
    "stage": "GA"
  },
  {
    "name": "compute.disks.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.disks.list",
    "stage": "GA"
  },
  {
    "name": "compute.disks.removeResourcePolicies",
    "stage": "GA"
  },
  {
    "name": "compute.disks.resize",
    "stage": "GA"
  },
  {
    "name": "compute.disks.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.disks.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.disks.update",
    "stage": "GA"
  },
  {
    "name": "compute.disks.use",
    "stage": "GA"
  },
  {
    "name": "compute.disks.useReadOnly",
    "stage": "GA"
  },
  {
    "name": "compute.externalVpnGateways.create",
    "stage": "GA"
  },
  {
    "name": "compute.externalVpnGateways.delete",
    "stage": "GA"
  },
  {
    "name": "compute.externalVpnGateways.get",
    "stage": "GA"
  },
  {
    "name": "compute.externalVpnGateways.list",
    "stage": "GA"
  },
  {
    "name": "compute.externalVpnGateways.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.externalVpnGateways.use",
    "stage": "GA"
  },
  {
    "name": "compute.firewalls.create",
    "stage": "GA"
  },
  {
    "name": "compute.firewalls.delete",
    "stage": "GA"
  },
  {
    "name": "compute.firewalls.get",
    "stage": "GA"
  },
  {
    "name": "compute.firewalls.list",
    "stage": "GA"
  },
  {
    "name": "compute.firewalls.update",
    "stage": "GA"
  },
  {
    "name": "compute.forwardingRules.create",
    "stage": "GA"
  },
  {
    "name": "compute.forwardingRules.delete",
    "stage": "GA"
  },
  {
    "name": "compute.forwardingRules.get",
    "stage": "GA"
  },
  {
    "name": "compute.forwardingRules.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.forwardingRules.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.forwardingRules.setTarget",
    "stage": "GA"
  },
  {
    "name": "compute.globalAddresses.create",
    "stage": "GA"
  },
  {
    "name": "compute.globalAddresses.createInternal",
    "stage": "GA"
  },
  {
    "name": "compute.globalAddresses.delete",
    "stage": "GA"
  },
  {
    "name": "compute.globalAddresses.deleteInternal",
    "stage": "GA"
  },
  {
    "name": "compute.globalAddresses.get",
    "stage": "GA"
  },
  {
    "name": "compute.globalAddresses.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalAddresses.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.globalAddresses.use",
    "stage": "GA"
  },
  {
    "name": "compute.globalForwardingRules.create",
    "stage": "GA"
  },
  {
    "name": "compute.globalForwardingRules.delete",
    "stage": "GA"
  },
  {
    "name": "compute.globalForwardingRules.get",
    "stage": "GA"
  },
  {
    "name": "compute.globalForwardingRules.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalForwardingRules.setLabels",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalForwardingRules.setTarget",
    "stage": "GA"
  },
  {
    "name": "compute.globalOperations.delete",
    "stage": "GA"
  },
  {
    "name": "compute.globalOperations.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalOperations.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.globalOperations.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalOperations.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.healthChecks.create",
    "stage": "GA"
  },
  {
    "name": "compute.healthChecks.delete",
    "stage": "GA"
  },
  {
    "name": "compute.healthChecks.get",
    "stage": "GA"
  },
  {
    "name": "compute.healthChecks.list",
    "stage": "GA"
  },
  {
    "name": "compute.healthChecks.update",
    "stage": "GA"
  },
  {
    "name": "compute.healthChecks.use",
    "stage": "GA"
  },
  {
    "name": "compute.healthChecks.useReadOnly",
    "stage": "GA"
  },
  {
    "name": "compute.httpHealthChecks.create",
    "stage": "GA"
  },
  {
    "name": "compute.httpHealthChecks.delete",
    "stage": "GA"
  },
  {
    "name": "compute.httpHealthChecks.get",
    "stage": "GA"
  },
  {
    "name": "compute.httpHealthChecks.list",
    "stage": "GA"
  },
  {
    "name": "compute.httpHealthChecks.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.httpHealthChecks.use",
    "stage": "GA"
  },
  {
    "name": "compute.httpHealthChecks.useReadOnly",
    "stage": "GA"
  },
  {
    "name": "compute.httpsHealthChecks.create",
    "stage": "GA"
  },
  {
    "name": "compute.httpsHealthChecks.delete",
    "stage": "GA"
  },
  {
    "name": "compute.httpsHealthChecks.get",
    "stage": "GA"
  },
  {
    "name": "compute.httpsHealthChecks.list",
    "stage": "GA"
  },
  {
    "name": "compute.httpsHealthChecks.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.httpsHealthChecks.use",
    "stage": "GA"
  },
  {
    "name": "compute.httpsHealthChecks.useReadOnly",
    "stage": "GA"
  },
  {
    "name": "compute.images.create",
    "stage": "GA"
  },
  {
    "name": "compute.images.delete",
    "stage": "GA"
  },
  {
    "name": "compute.images.deprecate",
    "stage": "GA"
  },
  {
    "name": "compute.images.get",
    "stage": "GA"
  },
  {
    "name": "compute.images.getFromFamily",
    "stage": "GA"
  },
  {
    "name": "compute.images.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.images.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.images.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.images.setLabels",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.images.update",
    "stage": "DEPRECATED"
  },
  {
    "name": "compute.images.useReadOnly",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroupManagers.create",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroupManagers.delete",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroupManagers.get",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroupManagers.list",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroupManagers.update",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroupManagers.use",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroups.create",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroups.delete",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroups.get",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroups.list",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroups.update",
    "stage": "GA"
  },
  {
    "name": "compute.instanceGroups.use",
    "stage": "GA"
  },
  {
    "name": "compute.instanceTemplates.create",
    "stage": "GA"
  },
  {
    "name": "compute.instanceTemplates.delete",
    "stage": "GA"
  },
  {
    "name": "compute.instanceTemplates.get",
    "stage": "GA"
  },
  {
    "name": "compute.instanceTemplates.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.instanceTemplates.list",
    "stage": "GA"
  },
  {
    "name": "compute.instanceTemplates.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.instanceTemplates.useReadOnly",
    "stage": "GA"
  },
  {
    "name": "compute.instances.addAccessConfig",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.instances.addMaintenancePolicies",
    "stage": "GA"
  },
  {
    "name": "compute.instances.attachDisk",
    "stage": "GA"
  },
  {
    "name": "compute.instances.create",
    "stage": "GA"
  },
  {
    "name": "compute.instances.delete",
    "stage": "GA"
  },
  {
    "name": "compute.instances.deleteAccessConfig",
    "stage": "GA"
  },
  {
    "name": "compute.instances.detachDisk",
    "stage": "GA"
  },
  {
    "name": "compute.instances.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.instances.getGuestAttributes",
    "stage": "GA"
  },
  {
    "name": "compute.instances.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.instances.getScreenshot"
  },
  {
    "name": "compute.instances.getSerialPortOutput",
    "stage": "GA"
  },
  {
    "name": "compute.instances.getShieldedInstanceIdentity",
    "stage": "GA"
  },
  {
    "name": "compute.instances.getShieldedVmIdentity",
    "stage": "GA"
  },
  {
    "name": "compute.instances.list",
    "stage": "GA"
  },
  {
    "name": "compute.instances.listReferrers",
    "stage": "GA"
  },
  {
    "name": "compute.instances.osAdminLogin",
    "stage": "GA"
  },
  {
    "name": "compute.instances.osLogin",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.instances.removeMaintenancePolicies",
    "stage": "GA"
  },
  {
    "name": "compute.instances.reset",
    "stage": "GA"
  },
  {
    "name": "compute.instances.resume",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.instances.setDeletionProtection",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setDiskAutoDelete",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setMachineResources",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setMachineType",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setMetadata",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setMinCpuPlatform",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setScheduling",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setServiceAccount",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setShieldedInstanceIntegrityPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setShieldedVmIntegrityPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.instances.setTags",
    "stage": "GA"
  },
  {
    "name": "compute.instances.start",
    "stage": "GA"
  },
  {
    "name": "compute.instances.startWithEncryptionKey",
    "stage": "GA"
  },
  {
    "name": "compute.instances.stop",
    "stage": "GA"
  },
  {
    "name": "compute.instances.suspend",
    "stage": "GA"
  },
  {
    "name": "compute.instances.updateAccessConfig",
    "stage": "GA"
  },
  {
    "name": "compute.instances.updateDisplayDevice",
    "stage": "BETA"
  },
  {
    "name": "compute.instances.updateNetworkInterface",
    "stage": "GA"
  },
  {
    "name": "compute.instances.updateShieldedInstanceConfig",
    "stage": "GA"
  },
  {
    "name": "compute.instances.updateShieldedVmConfig",
    "stage": "GA"
  },
  {
    "name": "compute.instances.use",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.setLabels",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.use",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectLocations.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectLocations.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.setLabels",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.use",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenseCodes.get",
    "stage": "GA"
  },
  {
    "name": "compute.licenseCodes.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenseCodes.list",
    "stage": "GA"
  },
  {
    "name": "compute.licenseCodes.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenseCodes.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenseCodes.use",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenses.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenses.delete",
    "stage": "GA"
  },
  {
    "name": "compute.licenses.get",
    "stage": "GA"
  },
  {
    "name": "compute.licenses.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenses.list",
    "stage": "GA"
  },
  {
    "name": "compute.licenses.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.machineTypes.get",
    "stage": "GA"
  },
  {
    "name": "compute.machineTypes.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.maintenancePolicies.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.maintenancePolicies.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.maintenancePolicies.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.maintenancePolicies.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.maintenancePolicies.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.maintenancePolicies.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.maintenancePolicies.use",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.attachNetworkEndpoints",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.create",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.delete",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.detachNetworkEndpoints",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.get",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.list",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.networkEndpointGroups.use",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.access"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.addPeering",
    "stage": "GA"
  },
  {
    "name": "compute.networks.create",
    "stage": "GA"
  },
  {
    "name": "compute.networks.delete",
    "stage": "GA"
  },
  {
    "name": "compute.networks.get",
    "stage": "GA"
  },
  {
    "name": "compute.networks.list",
    "stage": "GA"
  },
  {
    "name": "compute.networks.listPeeringRoutes",
    "stage": "GA"
  },
  {
    "name": "compute.networks.mirror",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.removePeering",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.switchToCustomMode",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.update",
    "stage": "GA"
  },
  {
    "name": "compute.networks.updatePeering",
    "stage": "GA"
  },
  {
    "name": "compute.networks.updatePolicy",
    "stage": "GA"
  },
  {
    "name": "compute.networks.use",
    "stage": "GA"
  },
  {
    "name": "compute.networks.useExternalIp",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.addNodes",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.create",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.delete",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.deleteNodes",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.get",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.list",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.setNodeTemplate",
    "stage": "GA"
  },
  {
    "name": "compute.nodeGroups.update",
    "stage": "BETA"
  },
  {
    "name": "compute.nodeTemplates.create",
    "stage": "GA"
  },
  {
    "name": "compute.nodeTemplates.delete",
    "stage": "GA"
  },
  {
    "name": "compute.nodeTemplates.get",
    "stage": "GA"
  },
  {
    "name": "compute.nodeTemplates.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.nodeTemplates.list",
    "stage": "GA"
  },
  {
    "name": "compute.nodeTemplates.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.nodeTypes.get",
    "stage": "GA"
  },
  {
    "name": "compute.nodeTypes.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "compute.organizations.administerXpn",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "name": "compute.packetMirrorings.update",
    "stage": "GA"
  },
  {
    "name": "compute.projects.get",
    "stage": "GA"
  },
  {
    "name": "compute.projects.setCommonInstanceMetadata",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.projects.setDefaultNetworkTier",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.projects.setDefaultServiceAccount",
    "stage": "GA"
  },
  {
    "name": "compute.projects.setUsageExportBucket",
    "stage": "GA"
  },
  {
    "name": "compute.regionBackendServices.create",
    "stage": "GA"
  },
  {
    "name": "compute.regionBackendServices.delete",
    "stage": "GA"
  },
  {
    "name": "compute.regionBackendServices.get",
    "stage": "GA"
  },
  {
    "name": "compute.regionBackendServices.list",
    "stage": "GA"
  },
  {
    "name": "compute.regionBackendServices.setSecurityPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.regionBackendServices.update",
    "stage": "GA"
  },
  {
    "name": "compute.regionBackendServices.use",
    "stage": "GA"
  },
  {
    "name": "compute.regionHealthCheckServices.create",
    "stage": "BETA"
  },
  {
    "name": "compute.regionHealthCheckServices.delete",
    "stage": "BETA"
  },
  {
    "name": "compute.regionHealthCheckServices.get",
    "stage": "BETA"
  },
  {
    "name": "compute.regionHealthCheckServices.list",
    "stage": "BETA"
  },
  {
    "name": "compute.regionHealthCheckServices.update",
    "stage": "BETA"
  },
  {
    "name": "compute.regionHealthCheckServices.use",
    "stage": "BETA"
  },
  {
    "name": "compute.regionNotificationEndpoints.create",
    "stage": "BETA"
  },
  {
    "name": "compute.regionNotificationEndpoints.delete",
    "stage": "BETA"
  },
  {
    "name": "compute.regionNotificationEndpoints.get",
    "stage": "BETA"
  },
  {
    "name": "compute.regionNotificationEndpoints.list",
    "stage": "BETA"
  },
  {
    "name": "compute.regionNotificationEndpoints.update",
    "stage": "BETA"
  },
  {
    "name": "compute.regionNotificationEndpoints.use",
    "stage": "BETA"
  },
  {
    "name": "compute.regionOperations.delete",
    "stage": "GA"
  },
  {
    "name": "compute.regionOperations.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.regionOperations.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.regionOperations.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.regionOperations.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.regions.get",
    "stage": "GA"
  },
  {
    "name": "compute.regions.list",
    "stage": "GA"
  },
  {
    "name": "compute.reservations.create",
    "stage": "BETA"
  },
  {
    "name": "compute.reservations.delete",
    "stage": "BETA"
  },
  {
    "name": "compute.reservations.get",
    "stage": "BETA"
  },
  {
    "name": "compute.reservations.list",
    "stage": "BETA"
  },
  {
    "name": "compute.reservations.resize",
    "stage": "BETA"
  },
  {
    "name": "compute.resourcePolicies.create",
    "stage": "GA"
  },
  {
    "name": "compute.resourcePolicies.delete",
    "stage": "GA"
  },
  {
    "name": "compute.resourcePolicies.get",
    "stage": "GA"
  },
  {
    "name": "compute.resourcePolicies.list",
    "stage": "GA"
  },
  {
    "name": "compute.resourcePolicies.use",
    "stage": "GA"
  },
  {
    "name": "compute.routers.create",
    "stage": "GA"
  },
  {
    "name": "compute.routers.delete",
    "stage": "GA"
  },
  {
    "name": "compute.routers.get",
    "stage": "GA"
  },
  {
    "name": "compute.routers.list",
    "stage": "GA"
  },
  {
    "name": "compute.routers.update",
    "stage": "GA"
  },
  {
    "name": "compute.routers.use",
    "stage": "GA"
  },
  {
    "name": "compute.routes.create",
    "stage": "GA"
  },
  {
    "name": "compute.routes.delete",
    "stage": "GA"
  },
  {
    "name": "compute.routes.get",
    "stage": "GA"
  },
  {
    "name": "compute.routes.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.use",
    "stage": "GA"
  },
  {
    "name": "compute.snapshots.create",
    "stage": "GA"
  },
  {
    "name": "compute.snapshots.delete",
    "stage": "GA"
  },
  {
    "name": "compute.snapshots.get",
    "stage": "GA"
  },
  {
    "name": "compute.snapshots.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.snapshots.list",
    "stage": "GA"
  },
  {
    "name": "compute.snapshots.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.snapshots.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.snapshots.useReadOnly",
    "stage": "GA"
  },
  {
    "name": "compute.sslCertificates.create",
    "stage": "GA"
  },
  {
    "name": "compute.sslCertificates.delete",
    "stage": "GA"
  },
  {
    "name": "compute.sslCertificates.get",
    "stage": "GA"
  },
  {
    "name": "compute.sslCertificates.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.create",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.delete",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.listAvailableFeatures",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.update",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.use",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.subnetworks.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.subnetworks.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.subnetworks.expandIpCidrRange",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.subnetworks.get",
    "stage": "GA"
  },
  {
    "name": "compute.subnetworks.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.subnetworks.list",
    "stage": "GA"
  },
  {
    "name": "compute.subnetworks.mirror",
    "stage": "GA"
  },
  {
    "name": "compute.subnetworks.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.subnetworks.setPrivateIpGoogleAccess",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.subnetworks.update",
    "stage": "BETA"
  },
  {
    "name": "compute.subnetworks.use",
    "stage": "GA"
  },
  {
    "name": "compute.subnetworks.useExternalIp",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpProxies.create",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpProxies.delete",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpProxies.get",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpProxies.list",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpProxies.setUrlMap",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpProxies.use",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpsProxies.create",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpsProxies.delete",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpsProxies.get",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpsProxies.list",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpsProxies.setSslCertificates",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.targetHttpsProxies.setSslPolicy",
    "stage": "BETA"
  },
  {
    "name": "compute.targetHttpsProxies.setUrlMap",
    "stage": "GA"
  },
  {
    "name": "compute.targetHttpsProxies.use",
    "stage": "GA"
  },
  {
    "name": "compute.targetInstances.create",
    "stage": "GA"
  },
  {
    "name": "compute.targetInstances.delete",
    "stage": "GA"
  },
  {
    "name": "compute.targetInstances.get",
    "stage": "GA"
  },
  {
    "name": "compute.targetInstances.list",
    "stage": "GA"
  },
  {
    "name": "compute.targetInstances.use",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.addHealthCheck",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.addInstance",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.create",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.delete",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.get",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.list",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.removeHealthCheck",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.removeInstance",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.update",
    "stage": "GA"
  },
  {
    "name": "compute.targetPools.use",
    "stage": "GA"
  },
  {
    "name": "compute.targetSslProxies.create",
    "stage": "GA"
  },
  {
    "name": "compute.targetSslProxies.delete",
    "stage": "GA"
  },
  {
    "name": "compute.targetSslProxies.get",
    "stage": "GA"
  },
  {
    "name": "compute.targetSslProxies.list",
    "stage": "GA"
  },
  {
    "name": "compute.targetSslProxies.setBackendService",
    "stage": "GA"
  },
  {
    "name": "compute.targetSslProxies.setProxyHeader",
    "stage": "GA"
  },
  {
    "name": "compute.targetSslProxies.setSslCertificates",
    "stage": "GA"
  },
  {
    "name": "compute.targetSslProxies.use",
    "stage": "GA"
  },
  {
    "name": "compute.targetTcpProxies.create",
    "stage": "GA"
  },
  {
    "name": "compute.targetTcpProxies.delete",
    "stage": "GA"
  },
  {
    "name": "compute.targetTcpProxies.get",
    "stage": "GA"
  },
  {
    "name": "compute.targetTcpProxies.list",
    "stage": "GA"
  },
  {
    "name": "compute.targetTcpProxies.update",
    "stage": "GA"
  },
  {
    "name": "compute.targetTcpProxies.use",
    "stage": "GA"
  },
  {
    "name": "compute.targetVpnGateways.create",
    "stage": "GA"
  },
  {
    "name": "compute.targetVpnGateways.delete",
    "stage": "GA"
  },
  {
    "name": "compute.targetVpnGateways.get",
    "stage": "GA"
  },
  {
    "name": "compute.targetVpnGateways.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.targetVpnGateways.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.targetVpnGateways.use",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.invalidateCache",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.use",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.validate",
    "stage": "GA"
  },
  {
    "name": "compute.vpnGateways.create",
    "stage": "GA"
  },
  {
    "name": "compute.vpnGateways.delete",
    "stage": "GA"
  },
  {
    "name": "compute.vpnGateways.get",
    "stage": "GA"
  },
  {
    "name": "compute.vpnGateways.list",
    "stage": "GA"
  },
  {
    "name": "compute.vpnGateways.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.vpnGateways.use",
    "stage": "GA"
  },
  {
    "name": "compute.vpnTunnels.create",
    "stage": "GA"
  },
  {
    "name": "compute.vpnTunnels.delete",
    "stage": "GA"
  },
  {
    "name": "compute.vpnTunnels.get",
    "stage": "GA"
  },
  {
    "name": "compute.vpnTunnels.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.vpnTunnels.setLabels",
    "stage": "GA"
  },
  {
    "name": "compute.zoneOperations.delete",
    "stage": "GA"
  },
  {
    "name": "compute.zoneOperations.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.zoneOperations.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.zoneOperations.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "compute.zoneOperations.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "compute.zones.get",
    "stage": "GA"
  },
  {
    "name": "compute.zones.list",
    "stage": "GA"
  },
  {
    "name": "container.apiServices.create",
    "stage": "GA"
  },
  {
    "name": "container.apiServices.delete",
    "stage": "GA"
  },
  {
    "name": "container.apiServices.get",
    "stage": "GA"
  },
  {
    "name": "container.apiServices.list",
    "stage": "GA"
  },
  {
    "name": "container.apiServices.update",
    "stage": "GA"
  },
  {
    "name": "container.apiServices.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.backendConfigs.create",
    "stage": "GA"
  },
  {
    "name": "container.backendConfigs.delete",
    "stage": "GA"
  },
  {
    "name": "container.backendConfigs.get",
    "stage": "GA"
  },
  {
    "name": "container.backendConfigs.list",
    "stage": "GA"
  },
  {
    "name": "container.backendConfigs.update",
    "stage": "GA"
  },
  {
    "name": "container.bindings.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.bindings.delete",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.bindings.get",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.bindings.list",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.bindings.update",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.certificateSigningRequests.approve",
    "stage": "GA"
  },
  {
    "name": "container.certificateSigningRequests.create",
    "stage": "GA"
  },
  {
    "name": "container.certificateSigningRequests.delete",
    "stage": "GA"
  },
  {
    "name": "container.certificateSigningRequests.get",
    "stage": "GA"
  },
  {
    "name": "container.certificateSigningRequests.list",
    "stage": "GA"
  },
  {
    "name": "container.certificateSigningRequests.update",
    "stage": "GA"
  },
  {
    "name": "container.certificateSigningRequests.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoleBindings.create",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoleBindings.delete",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoleBindings.get",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoleBindings.list",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoleBindings.update",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoles.bind",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoles.create",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoles.delete",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoles.get",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoles.list",
    "stage": "GA"
  },
  {
    "name": "container.clusterRoles.update",
    "stage": "GA"
  },
  {
    "name": "container.clusters.create",
    "stage": "GA"
  },
  {
    "name": "container.clusters.delete",
    "stage": "GA"
  },
  {
    "name": "container.clusters.get",
    "stage": "GA"
  },
  {
    "name": "container.clusters.getCredentials",
    "stage": "GA"
  },
  {
    "name": "container.clusters.list",
    "stage": "GA"
  },
  {
    "name": "container.clusters.update",
    "stage": "GA"
  },
  {
    "name": "container.componentStatuses.get",
    "stage": "GA"
  },
  {
    "name": "container.componentStatuses.list",
    "stage": "GA"
  },
  {
    "name": "container.configMaps.create",
    "stage": "GA"
  },
  {
    "name": "container.configMaps.delete",
    "stage": "GA"
  },
  {
    "name": "container.configMaps.get",
    "stage": "GA"
  },
  {
    "name": "container.configMaps.list",
    "stage": "GA"
  },
  {
    "name": "container.configMaps.update",
    "stage": "GA"
  },
  {
    "name": "container.controllerRevisions.create",
    "stage": "GA"
  },
  {
    "name": "container.controllerRevisions.delete",
    "stage": "GA"
  },
  {
    "name": "container.controllerRevisions.get",
    "stage": "GA"
  },
  {
    "name": "container.controllerRevisions.list",
    "stage": "GA"
  },
  {
    "name": "container.controllerRevisions.update",
    "stage": "GA"
  },
  {
    "name": "container.cronJobs.create",
    "stage": "GA"
  },
  {
    "name": "container.cronJobs.delete",
    "stage": "GA"
  },
  {
    "name": "container.cronJobs.get",
    "stage": "GA"
  },
  {
    "name": "container.cronJobs.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.cronJobs.list",
    "stage": "GA"
  },
  {
    "name": "container.cronJobs.update",
    "stage": "GA"
  },
  {
    "name": "container.cronJobs.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.csiDrivers.create",
    "stage": "GA"
  },
  {
    "name": "container.csiDrivers.delete",
    "stage": "GA"
  },
  {
    "name": "container.csiDrivers.get",
    "stage": "GA"
  },
  {
    "name": "container.csiDrivers.list",
    "stage": "GA"
  },
  {
    "name": "container.csiDrivers.update",
    "stage": "GA"
  },
  {
    "name": "container.csiNodes.create",
    "stage": "GA"
  },
  {
    "name": "container.csiNodes.delete",
    "stage": "GA"
  },
  {
    "name": "container.csiNodes.get",
    "stage": "GA"
  },
  {
    "name": "container.csiNodes.list",
    "stage": "GA"
  },
  {
    "name": "container.csiNodes.update",
    "stage": "GA"
  },
  {
    "name": "container.customResourceDefinitions.create",
    "stage": "GA"
  },
  {
    "name": "container.customResourceDefinitions.delete",
    "stage": "GA"
  },
  {
    "name": "container.customResourceDefinitions.get",
    "stage": "GA"
  },
  {
    "name": "container.customResourceDefinitions.list",
    "stage": "GA"
  },
  {
    "name": "container.customResourceDefinitions.update",
    "stage": "GA"
  },
  {
    "name": "container.customResourceDefinitions.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.daemonSets.create",
    "stage": "GA"
  },
  {
    "name": "container.daemonSets.delete",
    "stage": "GA"
  },
  {
    "name": "container.daemonSets.get",
    "stage": "GA"
  },
  {
    "name": "container.daemonSets.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.daemonSets.list",
    "stage": "GA"
  },
  {
    "name": "container.daemonSets.update",
    "stage": "GA"
  },
  {
    "name": "container.daemonSets.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.deployments.create",
    "stage": "GA"
  },
  {
    "name": "container.deployments.delete",
    "stage": "GA"
  },
  {
    "name": "container.deployments.get",
    "stage": "GA"
  },
  {
    "name": "container.deployments.getScale",
    "stage": "GA"
  },
  {
    "name": "container.deployments.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.deployments.list",
    "stage": "GA"
  },
  {
    "name": "container.deployments.rollback",
    "stage": "GA"
  },
  {
    "name": "container.deployments.update",
    "stage": "GA"
  },
  {
    "name": "container.deployments.updateScale",
    "stage": "GA"
  },
  {
    "name": "container.deployments.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.endpoints.create",
    "stage": "GA"
  },
  {
    "name": "container.endpoints.delete",
    "stage": "GA"
  },
  {
    "name": "container.endpoints.get",
    "stage": "GA"
  },
  {
    "name": "container.endpoints.list",
    "stage": "GA"
  },
  {
    "name": "container.endpoints.update",
    "stage": "GA"
  },
  {
    "name": "container.events.create",
    "stage": "GA"
  },
  {
    "name": "container.events.delete",
    "stage": "GA"
  },
  {
    "name": "container.events.get",
    "stage": "GA"
  },
  {
    "name": "container.events.list",
    "stage": "GA"
  },
  {
    "name": "container.events.update",
    "stage": "GA"
  },
  {
    "name": "container.horizontalPodAutoscalers.create",
    "stage": "GA"
  },
  {
    "name": "container.horizontalPodAutoscalers.delete",
    "stage": "GA"
  },
  {
    "name": "container.horizontalPodAutoscalers.get",
    "stage": "GA"
  },
  {
    "name": "container.horizontalPodAutoscalers.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.horizontalPodAutoscalers.list",
    "stage": "GA"
  },
  {
    "name": "container.horizontalPodAutoscalers.update",
    "stage": "GA"
  },
  {
    "name": "container.horizontalPodAutoscalers.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.hostServiceAgent.use",
    "stage": "GA"
  },
  {
    "name": "container.ingresses.create",
    "stage": "GA"
  },
  {
    "name": "container.ingresses.delete",
    "stage": "GA"
  },
  {
    "name": "container.ingresses.get",
    "stage": "GA"
  },
  {
    "name": "container.ingresses.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.ingresses.list",
    "stage": "GA"
  },
  {
    "name": "container.ingresses.update",
    "stage": "GA"
  },
  {
    "name": "container.ingresses.updateStatus",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.create",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.delete",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.get",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.list",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.update",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.jobs.create",
    "stage": "GA"
  },
  {
    "name": "container.jobs.delete",
    "stage": "GA"
  },
  {
    "name": "container.jobs.get",
    "stage": "GA"
  },
  {
    "name": "container.jobs.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.jobs.list",
    "stage": "GA"
  },
  {
    "name": "container.jobs.update",
    "stage": "GA"
  },
  {
    "name": "container.jobs.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.limitRanges.create",
    "stage": "GA"
  },
  {
    "name": "container.limitRanges.delete",
    "stage": "GA"
  },
  {
    "name": "container.limitRanges.get",
    "stage": "GA"
  },
  {
    "name": "container.limitRanges.list",
    "stage": "GA"
  },
  {
    "name": "container.limitRanges.update",
    "stage": "GA"
  },
  {
    "name": "container.localSubjectAccessReviews.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.localSubjectAccessReviews.list",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.namespaces.create",
    "stage": "GA"
  },
  {
    "name": "container.namespaces.delete",
    "stage": "GA"
  },
  {
    "name": "container.namespaces.get",
    "stage": "GA"
  },
  {
    "name": "container.namespaces.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.namespaces.list",
    "stage": "GA"
  },
  {
    "name": "container.namespaces.update",
    "stage": "GA"
  },
  {
    "name": "container.namespaces.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.networkPolicies.create",
    "stage": "GA"
  },
  {
    "name": "container.networkPolicies.delete",
    "stage": "GA"
  },
  {
    "name": "container.networkPolicies.get",
    "stage": "GA"
  },
  {
    "name": "container.networkPolicies.list",
    "stage": "GA"
  },
  {
    "name": "container.networkPolicies.update",
    "stage": "GA"
  },
  {
    "name": "container.nodes.create",
    "stage": "GA"
  },
  {
    "name": "container.nodes.delete",
    "stage": "GA"
  },
  {
    "name": "container.nodes.get",
    "stage": "GA"
  },
  {
    "name": "container.nodes.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.nodes.list",
    "stage": "GA"
  },
  {
    "name": "container.nodes.proxy",
    "stage": "GA",
    "title": "Proxy Requests to a Node"
  },
  {
    "name": "container.nodes.update",
    "stage": "GA"
  },
  {
    "name": "container.nodes.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.operations.get",
    "stage": "GA"
  },
  {
    "name": "container.operations.list",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumeClaims.create",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumeClaims.delete",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumeClaims.get",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumeClaims.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumeClaims.list",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumeClaims.update",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumeClaims.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumes.create",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumes.delete",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumes.get",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumes.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumes.list",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumes.update",
    "stage": "GA"
  },
  {
    "name": "container.persistentVolumes.updateStatus",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.create",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.delete",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.get",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.list",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.update",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.updateStatus",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.podDisruptionBudgets.create",
    "stage": "GA"
  },
  {
    "name": "container.podDisruptionBudgets.delete",
    "stage": "GA"
  },
  {
    "name": "container.podDisruptionBudgets.get",
    "stage": "GA"
  },
  {
    "name": "container.podDisruptionBudgets.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.podDisruptionBudgets.list",
    "stage": "GA"
  },
  {
    "name": "container.podDisruptionBudgets.update",
    "stage": "GA"
  },
  {
    "name": "container.podDisruptionBudgets.updateStatus",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.create",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.delete",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.get",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.list",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.update",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.podSecurityPolicies.create",
    "stage": "GA"
  },
  {
    "name": "container.podSecurityPolicies.delete",
    "stage": "GA"
  },
  {
    "name": "container.podSecurityPolicies.get",
    "stage": "GA"
  },
  {
    "name": "container.podSecurityPolicies.list",
    "stage": "GA"
  },
  {
    "name": "container.podSecurityPolicies.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.podSecurityPolicies.use",
    "stage": "GA"
  },
  {
    "name": "container.podTemplates.create",
    "stage": "GA"
  },
  {
    "name": "container.podTemplates.delete",
    "stage": "GA"
  },
  {
    "name": "container.podTemplates.get",
    "stage": "GA"
  },
  {
    "name": "container.podTemplates.list",
    "stage": "GA"
  },
  {
    "name": "container.podTemplates.update",
    "stage": "GA"
  },
  {
    "name": "container.pods.attach",
    "stage": "GA",
    "title": "Attach to a Running Container in a Pod"
  },
  {
    "name": "container.pods.create",
    "stage": "GA"
  },
  {
    "name": "container.pods.delete",
    "stage": "GA"
  },
  {
    "name": "container.pods.evict",
    "stage": "GA",
    "title": "Evict a Pod"
  },
  {
    "name": "container.pods.exec",
    "stage": "GA",
    "title": "Execute Commands in a Pod"
  },
  {
    "name": "container.pods.get",
    "stage": "GA"
  },
  {
    "name": "container.pods.getLogs",
    "stage": "GA",
    "title": "Get Logs from a Pod"
  },
  {
    "name": "container.pods.getStatus",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.pods.initialize",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.pods.list",
    "stage": "GA"
  },
  {
    "name": "container.pods.portForward",
    "stage": "GA",
    "title": "Forward Port(s) to a Pod"
  },
  {
    "name": "container.pods.proxy",
    "stage": "GA",
    "title": "Proxy Requests to a Pod"
  },
  {
    "name": "container.pods.update",
    "stage": "GA"
  },
  {
    "name": "container.pods.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.create",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.delete",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.get",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.getScale",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.list",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.update",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.updateScale",
    "stage": "GA"
  },
  {
    "name": "container.replicaSets.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.create",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.delete",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.get",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.getScale",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.list",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.update",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.updateScale",
    "stage": "GA"
  },
  {
    "name": "container.replicationControllers.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.resourceQuotas.create",
    "stage": "GA"
  },
  {
    "name": "container.resourceQuotas.delete",
    "stage": "GA"
  },
  {
    "name": "container.resourceQuotas.get",
    "stage": "GA"
  },
  {
    "name": "container.resourceQuotas.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.resourceQuotas.list",
    "stage": "GA"
  },
  {
    "name": "container.resourceQuotas.update",
    "stage": "GA"
  },
  {
    "name": "container.resourceQuotas.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.roleBindings.create",
    "stage": "GA"
  },
  {
    "name": "container.roleBindings.delete",
    "stage": "GA"
  },
  {
    "name": "container.roleBindings.get",
    "stage": "GA"
  },
  {
    "name": "container.roleBindings.list",
    "stage": "GA"
  },
  {
    "name": "container.roleBindings.update",
    "stage": "GA"
  },
  {
    "name": "container.roles.bind",
    "stage": "GA"
  },
  {
    "name": "container.roles.create",
    "stage": "GA"
  },
  {
    "name": "container.roles.delete",
    "stage": "GA"
  },
  {
    "name": "container.roles.get",
    "stage": "GA"
  },
  {
    "name": "container.roles.list",
    "stage": "GA"
  },
  {
    "name": "container.roles.update",
    "stage": "GA"
  },
  {
    "name": "container.runtimeClasses.create",
    "stage": "GA"
  },
  {
    "name": "container.runtimeClasses.delete",
    "stage": "GA"
  },
  {
    "name": "container.runtimeClasses.get",
    "stage": "GA"
  },
  {
    "name": "container.runtimeClasses.list",
    "stage": "GA"
  },
  {
    "name": "container.runtimeClasses.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.create",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.delete",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.get",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.list",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.update",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.updateStatus",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.secrets.create",
    "stage": "GA"
  },
  {
    "name": "container.secrets.delete",
    "stage": "GA"
  },
  {
    "name": "container.secrets.get",
    "stage": "GA"
  },
  {
    "name": "container.secrets.list",
    "stage": "GA"
  },
  {
    "name": "container.secrets.update",
    "stage": "GA"
  },
  {
    "name": "container.selfSubjectAccessReviews.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.selfSubjectAccessReviews.list",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.serviceAccounts.create",
    "stage": "GA"
  },
  {
    "name": "container.serviceAccounts.delete",
    "stage": "GA"
  },
  {
    "name": "container.serviceAccounts.get",
    "stage": "GA"
  },
  {
    "name": "container.serviceAccounts.list",
    "stage": "GA"
  },
  {
    "name": "container.serviceAccounts.update",
    "stage": "GA"
  },
  {
    "name": "container.services.create",
    "stage": "GA"
  },
  {
    "name": "container.services.delete",
    "stage": "GA"
  },
  {
    "name": "container.services.get",
    "stage": "GA"
  },
  {
    "name": "container.services.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.services.list",
    "stage": "GA"
  },
  {
    "name": "container.services.proxy",
    "stage": "GA",
    "title": "Proxy Requests to a Service"
  },
  {
    "name": "container.services.update",
    "stage": "GA"
  },
  {
    "name": "container.services.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.create",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.delete",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.get",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.getScale",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.getStatus",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.list",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.update",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.updateScale",
    "stage": "GA"
  },
  {
    "name": "container.statefulSets.updateStatus",
    "stage": "GA"
  },
  {
    "name": "container.storageClasses.create",
    "stage": "GA"
  },
  {
    "name": "container.storageClasses.delete",
    "stage": "GA"
  },
  {
    "name": "container.storageClasses.get",
    "stage": "GA"
  },
  {
    "name": "container.storageClasses.list",
    "stage": "GA"
  },
  {
    "name": "container.storageClasses.update",
    "stage": "GA"
  },
  {
    "name": "container.subjectAccessReviews.create",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.subjectAccessReviews.list",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.thirdPartyObjects.create",
    "stage": "GA"
  },
  {
    "name": "container.thirdPartyObjects.delete",
    "stage": "GA"
  },
  {
    "name": "container.thirdPartyObjects.get",
    "stage": "GA"
  },
  {
    "name": "container.thirdPartyObjects.list",
    "stage": "GA"
  },
  {
    "name": "container.thirdPartyObjects.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.create",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.delete",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.get",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.list",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.update",
    "stage": "DEPRECATED"
  },
  {
    "name": "container.tokenReviews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.categories.fineGrainedGet",
    "stage": "BETA",
    "title": "Read the sub-resources tagged by this policy tag"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.categories.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.categories.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.create",
    "stage": "BETA",
    "title": "Create entry"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.delete",
    "stage": "BETA",
    "title": "Delete entries"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.get",
    "stage": "BETA",
    "title": "Read entries"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.getIamPolicy",
    "stage": "BETA",
    "title": "Get ACL of the entry"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.entries.list",
    "stage": "BETA",
    "title": "List entries of an entry group"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.setIamPolicy",
    "stage": "BETA",
    "title": "Set ACL of the entry"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.update",
    "stage": "BETA",
    "title": "Update entries"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.entries.updateTag",
    "stage": "BETA",
    "title": "Update tags on entries"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.create",
    "stage": "BETA",
    "title": "Create entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.delete",
    "stage": "BETA",
    "title": "Delete entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.get",
    "stage": "BETA",
    "title": "Read entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.getIamPolicy",
    "stage": "BETA",
    "title": "Get ACL of the entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.list",
    "stage": "BETA",
    "title": "List entryGroups"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.setIamPolicy",
    "stage": "BETA",
    "title": "Set ACL of the entryGroup"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.entryGroups.update",
    "stage": "BETA",
    "title": "Update entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.create",
    "stage": "BETA",
    "title": "Create tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.delete",
    "stage": "BETA",
    "title": "Delete tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.get",
    "stage": "BETA",
    "title": "Read tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.getIamPolicy",
    "stage": "BETA",
    "title": "Get ACL of the tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.getTag",
    "stage": "BETA",
    "title": "Read tags that were created using the template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.setIamPolicy",
    "stage": "BETA",
    "title": "Set ACL of the tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.update",
    "stage": "BETA",
    "title": "Update tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.use",
    "stage": "BETA",
    "title": "Use the template to tag resources"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.taxonomies.create",
    "stage": "BETA",
    "title": "Create taxonomies"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.taxonomies.delete",
    "stage": "BETA",
    "title": "Delete taxonomies"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.taxonomies.get",
    "stage": "BETA",
    "title": "Read taxonomies"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.taxonomies.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.taxonomies.list",
    "stage": "BETA",
    "title": "List taxonomies"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.taxonomies.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datacatalog.taxonomies.update",
    "stage": "BETA",
    "title": "Update taxonomies"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "dataflow.jobs.snapshot"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.updateContents",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.messages.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.metrics.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "dataflow.snapshots.delete"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "dataflow.snapshots.get"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "dataflow.snapshots.list"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.create",
    "stage": "BETA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.delete",
    "stage": "BETA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.get",
    "stage": "BETA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.list",
    "stage": "BETA",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.restart",
    "stage": "BETA",
    "title": "Restart Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.update",
    "stage": "BETA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.upgrade",
    "stage": "BETA",
    "title": "Upgrade Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotateddatasets.delete",
    "stage": "BETA",
    "title": "Delete AnnotatedDataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotateddatasets.get",
    "stage": "BETA",
    "title": "Get AnnotatedDataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotateddatasets.label",
    "stage": "BETA",
    "title": "Label Dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotateddatasets.list",
    "stage": "BETA",
    "title": "List AnnotatedDatasets"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotationspecsets.create",
    "stage": "BETA",
    "title": "Create AnnotationSpecSet"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotationspecsets.delete",
    "stage": "BETA",
    "title": "Delete AnnotationSpecSet"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotationspecsets.get",
    "stage": "BETA",
    "title": "Get AnnotationSpecSet"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotationspecsets.list",
    "stage": "BETA",
    "title": "List AnnotationSpecSets"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.dataitems.get",
    "stage": "BETA",
    "title": "Get DataItem"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.dataitems.list",
    "stage": "BETA",
    "title": "List DataItems"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.create",
    "stage": "BETA",
    "title": "Create Datadset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.delete",
    "stage": "BETA",
    "title": "Delete Dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.export",
    "stage": "BETA",
    "title": "Export Dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.get",
    "stage": "BETA",
    "title": "Get Dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.import",
    "stage": "BETA",
    "title": "Import dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.list",
    "stage": "BETA",
    "title": "List Datasets"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.examples.get",
    "stage": "BETA",
    "title": "Get Example"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.examples.list",
    "stage": "BETA",
    "title": "List Examples"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.instructions.create",
    "stage": "BETA",
    "title": "Create Instruction"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.instructions.delete",
    "stage": "BETA",
    "title": "Delete Instruction"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.instructions.get",
    "stage": "BETA",
    "title": "Get Instruction"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.instructions.list",
    "stage": "BETA",
    "title": "List Instructions"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.operations.list",
    "stage": "BETA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "dataprep.projects.use",
    "stage": "BETA"
  },
  {
    "name": "dataproc.agents.create",
    "stage": "GA",
    "title": "Create Dataproc Agents"
  },
  {
    "name": "dataproc.agents.delete",
    "stage": "GA",
    "title": "Delete Dataproc Agents"
  },
  {
    "name": "dataproc.agents.get",
    "stage": "GA",
    "title": "Read Dataproc Agents"
  },
  {
    "name": "dataproc.agents.list",
    "stage": "GA",
    "title": "List Dataproc Agents"
  },
  {
    "name": "dataproc.agents.update",
    "stage": "GA",
    "title": "Update Dataproc Agents"
  },
  {
    "name": "dataproc.autoscalingPolicies.create",
    "stage": "GA",
    "title": "Create Dataproc Autoscaling Policies"
  },
  {
    "name": "dataproc.autoscalingPolicies.delete",
    "stage": "GA",
    "title": "Delete Dataproc Autoscaling Policies"
  },
  {
    "name": "dataproc.autoscalingPolicies.get",
    "stage": "GA",
    "title": "Get Dataproc Autoscaling Policies"
  },
  {
    "name": "dataproc.autoscalingPolicies.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.autoscalingPolicies.list",
    "stage": "GA",
    "title": "List Dataproc Autoscaling Policies"
  },
  {
    "name": "dataproc.autoscalingPolicies.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.autoscalingPolicies.update",
    "stage": "GA",
    "title": "Update Dataproc Autoscaling Policies"
  },
  {
    "name": "dataproc.autoscalingPolicies.use",
    "stage": "GA",
    "title": "Use Dataproc Autoscaling Policies"
  },
  {
    "name": "dataproc.clusters.create",
    "stage": "GA",
    "title": "Create Dataproc Clusters"
  },
  {
    "name": "dataproc.clusters.delete",
    "stage": "GA",
    "title": "Delete Dataproc Clusters"
  },
  {
    "name": "dataproc.clusters.get",
    "stage": "GA",
    "title": "Read Dataproc Clusters"
  },
  {
    "name": "dataproc.clusters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Clusters"
  },
  {
    "name": "dataproc.clusters.list",
    "stage": "GA",
    "title": "List Dataproc Clusters"
  },
  {
    "name": "dataproc.clusters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Clusters"
  },
  {
    "name": "dataproc.clusters.update",
    "stage": "GA",
    "title": "Update Dataproc Clusters"
  },
  {
    "name": "dataproc.clusters.use",
    "stage": "GA",
    "title": "Use Dataproc Clusters"
  },
  {
    "name": "dataproc.jobs.cancel",
    "stage": "GA",
    "title": "Cancel Dataproc Jobs"
  },
  {
    "name": "dataproc.jobs.create",
    "stage": "GA",
    "title": "Create Dataproc Jobs"
  },
  {
    "name": "dataproc.jobs.delete",
    "stage": "GA",
    "title": "Delete Dataproc Jobs"
  },
  {
    "name": "dataproc.jobs.get",
    "stage": "GA",
    "title": "Read Dataproc Jobs"
  },
  {
    "name": "dataproc.jobs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Jobs"
  },
  {
    "name": "dataproc.jobs.list",
    "stage": "GA",
    "title": "List Dataproc Jobs"
  },
  {
    "name": "dataproc.jobs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Jobs"
  },
  {
    "name": "dataproc.jobs.update",
    "stage": "GA",
    "title": "Update Dataproc Jobs"
  },
  {
    "name": "dataproc.operations.cancel",
    "stage": "GA",
    "title": "Cancel Dataproc Operations"
  },
  {
    "name": "dataproc.operations.delete",
    "stage": "GA",
    "title": "Delete Dataproc Operations"
  },
  {
    "name": "dataproc.operations.get",
    "stage": "GA",
    "title": "Read Dataproc Operations"
  },
  {
    "name": "dataproc.operations.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Operations"
  },
  {
    "name": "dataproc.operations.list",
    "stage": "GA",
    "title": "List Dataproc Operations"
  },
  {
    "name": "dataproc.operations.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Operation"
  },
  {
    "name": "dataproc.tasks.lease",
    "stage": "GA",
    "title": "Lease Dataproc Tasks"
  },
  {
    "name": "dataproc.tasks.listInvalidatedLeases",
    "stage": "GA",
    "title": "List Invalidated Dataproc Task Leases"
  },
  {
    "name": "dataproc.tasks.reportStatus",
    "stage": "GA",
    "title": "Report Dataproc Task Status"
  },
  {
    "name": "dataproc.workflowTemplates.create",
    "stage": "GA",
    "title": "Create Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.workflowTemplates.delete",
    "stage": "GA",
    "title": "Delete Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.workflowTemplates.get",
    "stage": "GA",
    "title": "Get Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.workflowTemplates.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.workflowTemplates.instantiate",
    "stage": "GA",
    "title": "Instantiate Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.workflowTemplates.instantiateInline",
    "stage": "GA",
    "title": "Instantiate Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.workflowTemplates.list",
    "stage": "GA",
    "title": "List Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.workflowTemplates.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Workflow Templates"
  },
  {
    "name": "dataproc.workflowTemplates.update",
    "stage": "GA",
    "title": "Update Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "dataprocessing.featurecontrols.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "dataprocessing.featurecontrols.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "dataprocessing.featurecontrols.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "dataprocessing.iamaccesshistory.exportData",
    "stage": "BETA",
    "title": "Export IAM Access history."
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.create",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.export",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.getIamPolicy",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.import",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.list",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.setIamPolicy",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.databases.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.entities.allocateIds",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.entities.create",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.entities.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.entities.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.entities.list",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.entities.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.indexes.create",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.indexes.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.indexes.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.indexes.list",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.indexes.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.locations.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.locations.list",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.namespaces.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.namespaces.getIamPolicy",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.namespaces.list",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.namespaces.setIamPolicy",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.operations.cancel",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.operations.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.operations.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.operations.list",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.statistics.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "datastore.statistics.list",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.compositeTypes.create",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.compositeTypes.delete",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.compositeTypes.get",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.compositeTypes.list",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.compositeTypes.update",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.cancelPreview",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.create",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.delete",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.get",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.list",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.stop",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.deployments.update",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.manifests.get",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.manifests.list",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.operations.get",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.operations.list",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.resources.get",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.resources.list",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.typeProviders.create",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.typeProviders.delete",
    "stage": "GA"
  },
  {
    "name": "deploymentmanager.typeProviders.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.typeProviders.getType",
    "stage": "DEPRECATED"
  },
  {
    "name": "deploymentmanager.typeProviders.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.typeProviders.listTypes",
    "stage": "DEPRECATED"
  },
  {
    "name": "deploymentmanager.typeProviders.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.types.create",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.types.delete",
    "stage": "DEPRECATED"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.types.get",
    "stage": "DEPRECATED"
  },
  {
    "name": "deploymentmanager.types.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.types.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.create",
    "stage": "GA",
    "title": "Create Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.delete",
    "stage": "GA",
    "title": "Delete Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.export",
    "stage": "GA",
    "title": "Export Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.get",
    "stage": "GA",
    "title": "Get Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.import",
    "stage": "GA",
    "title": "Import Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.restore",
    "stage": "GA",
    "title": "Restore Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.search",
    "stage": "GA",
    "title": "Search Agents"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.train",
    "stage": "GA",
    "title": "Train Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.update",
    "stage": "GA",
    "title": "Update Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.create",
    "stage": "GA",
    "title": "Create Context"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.delete",
    "stage": "GA",
    "title": "Delete Context"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.get",
    "stage": "GA",
    "title": "Get Context"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.list",
    "stage": "GA",
    "title": "List Contexts"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.update",
    "stage": "GA",
    "title": "Update Context"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.documents.create",
    "stage": "GA",
    "title": "Create Document"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.documents.delete",
    "stage": "GA",
    "title": "Delete Document"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.documents.get",
    "stage": "GA",
    "title": "Get Document"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.documents.list",
    "stage": "GA",
    "title": "List Documents"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.create",
    "stage": "GA",
    "title": "Create Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.createEntity",
    "stage": "GA",
    "title": "Create Entities in an Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.delete",
    "stage": "GA",
    "title": "Delete EntityType"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.deleteEntity",
    "stage": "GA",
    "title": "Delete Entities in an Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.get",
    "stage": "GA",
    "title": "Get Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.list",
    "stage": "GA",
    "title": "List Entity Types"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.update",
    "stage": "GA",
    "title": "Update Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.updateEntity",
    "stage": "GA",
    "title": "Update Entities in an Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.create",
    "stage": "GA",
    "title": "Create Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.delete",
    "stage": "GA",
    "title": "Delete Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.get",
    "stage": "GA",
    "title": "Get Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.list",
    "stage": "GA",
    "title": "List Intents"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.update",
    "stage": "GA",
    "title": "Update Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.create",
    "stage": "GA",
    "title": "Create Knowledge Base"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.delete",
    "stage": "GA",
    "title": "Delete Knowledge Base"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.get",
    "stage": "GA",
    "title": "Get Knowledge Base"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.list",
    "stage": "GA",
    "title": "List Knowledge Bases"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.create",
    "stage": "GA",
    "title": "Create Session Entity Types"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.delete",
    "stage": "GA",
    "title": "Delete Session Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.get",
    "stage": "GA",
    "title": "Get Session Entity dialog engineType"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.list",
    "stage": "GA",
    "title": "List Session Entity Types"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.update",
    "stage": "GA",
    "title": "Update Session Entity Types"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessions.detectIntent",
    "stage": "GA",
    "title": "Detect Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessions.streamingDetectIntent",
    "stage": "GA",
    "title": "Detect Intent with Streaming Audio"
  },
  {
    "apiDisabled": true,
    "name": "dlp.analyzeRiskTemplates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.analyzeRiskTemplates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.analyzeRiskTemplates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.analyzeRiskTemplates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.analyzeRiskTemplates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.kms.encrypt",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.update",
    "stage": "GA"
  },
  {
    "name": "dns.changes.create",
    "stage": "GA"
  },
  {
    "name": "dns.changes.get",
    "stage": "GA"
  },
  {
    "name": "dns.changes.list",
    "stage": "GA"
  },
  {
    "name": "dns.dnsKeys.get",
    "stage": "GA"
  },
  {
    "name": "dns.dnsKeys.list",
    "stage": "GA"
  },
  {
    "name": "dns.managedZoneOperations.get",
    "stage": "GA"
  },
  {
    "name": "dns.managedZoneOperations.list",
    "stage": "GA"
  },
  {
    "name": "dns.managedZones.create",
    "stage": "GA"
  },
  {
    "name": "dns.managedZones.delete",
    "stage": "GA"
  },
  {
    "name": "dns.managedZones.get",
    "stage": "GA"
  },
  {
    "name": "dns.managedZones.list",
    "stage": "GA"
  },
  {
    "name": "dns.managedZones.update",
    "stage": "GA"
  },
  {
    "name": "dns.networks.bindPrivateDNSPolicy",
    "stage": "GA"
  },
  {
    "name": "dns.networks.bindPrivateDNSZone",
    "stage": "GA"
  },
  {
    "name": "dns.networks.targetWithPeeringZone",
    "stage": "GA"
  },
  {
    "name": "dns.policies.create",
    "stage": "GA"
  },
  {
    "name": "dns.policies.delete",
    "stage": "GA"
  },
  {
    "name": "dns.policies.get",
    "stage": "GA"
  },
  {
    "name": "dns.policies.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "dns.policies.list",
    "stage": "GA"
  },
  {
    "name": "dns.policies.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "dns.policies.update",
    "stage": "GA"
  },
  {
    "name": "dns.projects.get",
    "stage": "GA"
  },
  {
    "name": "dns.resourceRecordSets.create",
    "stage": "GA"
  },
  {
    "name": "dns.resourceRecordSets.delete",
    "stage": "GA"
  },
  {
    "name": "dns.resourceRecordSets.list",
    "stage": "GA"
  },
  {
    "name": "dns.resourceRecordSets.update",
    "stage": "GA"
  },
  {
    "name": "endpoints.portals.attachCustomDomain",
    "stage": "BETA"
  },
  {
    "name": "endpoints.portals.detachCustomDomain",
    "stage": "BETA"
  },
  {
    "name": "endpoints.portals.listCustomDomains",
    "stage": "BETA"
  },
  {
    "name": "endpoints.portals.update",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.applications.list",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.errorEvents.create",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.errorEvents.delete",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.errorEvents.list",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.groupMetadata.get",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.groupMetadata.update",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.groups.list",
    "stage": "BETA"
  },
  {
    "name": "file.instances.create",
    "stage": "BETA"
  },
  {
    "name": "file.instances.delete",
    "stage": "BETA"
  },
  {
    "name": "file.instances.get",
    "stage": "BETA"
  },
  {
    "name": "file.instances.list",
    "stage": "BETA"
  },
  {
    "name": "file.instances.restore",
    "stage": "BETA"
  },
  {
    "name": "file.instances.update",
    "stage": "BETA"
  },
  {
    "name": "file.locations.get",
    "stage": "BETA"
  },
  {
    "name": "file.locations.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "file.operations.cancel",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "file.operations.delete",
    "stage": "BETA"
  },
  {
    "name": "file.operations.get",
    "stage": "BETA"
  },
  {
    "name": "file.operations.list",
    "stage": "BETA"
  },
  {
    "name": "file.snapshots.create",
    "stage": "BETA"
  },
  {
    "name": "file.snapshots.delete",
    "stage": "BETA"
  },
  {
    "name": "file.snapshots.get",
    "stage": "BETA"
  },
  {
    "name": "file.snapshots.list",
    "stage": "BETA"
  },
  {
    "name": "file.snapshots.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.billingPlans.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.billingPlans.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.links.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.links.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.links.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.links.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.projects.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.projects.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.projects.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experimentresults.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.projectmetadata.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseanalytics.resources.googleAnalyticsEdit",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.groups.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.groups.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.releases.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.releases.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.testers.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.testers.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.getHashConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.createSession",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.sendEmail",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrash.issues.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrash.reports.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.config.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.config.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.data.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.issues.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.issues.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.issues.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.sessions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.destinations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.destinations.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.links.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.links.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.links.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.links.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.stats.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensions.configs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensions.configs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensions.configs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensions.configs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.compressionjobs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.compressionjobs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.compressionjobs.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.compressionjobs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.compressionjobs.start",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.compressionjobs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.modelversions.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.modelversions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.modelversions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.modelversions.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.create",
    "stage": "GA",
    "title": "Create new campaign entries for Firebase Notifications"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.delete",
    "stage": "GA",
    "title": "Delete campaign entries for Firebase Notifications"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.get",
    "stage": "GA",
    "title": "Read Firebase Notifications data"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.list",
    "stage": "GA",
    "title": "List existing campaigns for Firebase Notifications"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.update",
    "stage": "GA",
    "title": "Update campaign entries for Firebase Notifications"
  },
  {
    "apiDisabled": true,
    "name": "firebaseperformance.config.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseperformance.config.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseperformance.config.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseperformance.data.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasepredictions.predictions.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasepredictions.predictions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasepredictions.predictions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasepredictions.predictions.update",
    "stage": "GA"
  },
  {
    "name": "firebaserules.releases.create",
    "stage": "GA"
  },
  {
    "name": "firebaserules.releases.delete",
    "stage": "GA"
  },
  {
    "name": "firebaserules.releases.get",
    "stage": "GA"
  },
  {
    "name": "firebaserules.releases.getExecutable",
    "stage": "GA"
  },
  {
    "name": "firebaserules.releases.list",
    "stage": "GA"
  },
  {
    "name": "firebaserules.releases.update",
    "stage": "GA"
  },
  {
    "name": "firebaserules.rulesets.create",
    "stage": "GA"
  },
  {
    "name": "firebaserules.rulesets.delete",
    "stage": "GA"
  },
  {
    "name": "firebaserules.rulesets.get",
    "stage": "GA"
  },
  {
    "name": "firebaserules.rulesets.list",
    "stage": "GA"
  },
  {
    "name": "firebaserules.rulesets.test",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerClusters.create",
    "stage": "BETA",
    "title": "Create GameServerClusters"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerClusters.delete",
    "stage": "BETA",
    "title": "Delete GameServerCluster"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerClusters.get",
    "stage": "BETA",
    "title": "Get GameServerCluster"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerClusters.list",
    "stage": "BETA",
    "title": "List GameServerClusters"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerClusters.update",
    "stage": "BETA",
    "title": "Update GameServerCluster"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerConfigs.create",
    "stage": "BETA",
    "title": "Create GameServerConfig"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerConfigs.delete",
    "stage": "BETA",
    "title": "Delete GameServerConfig"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerConfigs.get",
    "stage": "BETA",
    "title": "Get GameServerConfig"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerConfigs.list",
    "stage": "BETA",
    "title": "List GameServerConfigs"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerDeployments.create",
    "stage": "BETA",
    "title": "Create GameServerDeployments"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerDeployments.delete",
    "stage": "BETA",
    "title": "Delete GameServerDeployment"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerDeployments.get",
    "stage": "BETA",
    "title": "Get GameServerDeployment"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerDeployments.list",
    "stage": "BETA",
    "title": "List GameServerDeployments"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerDeployments.rollout",
    "stage": "BETA",
    "title": "Rollout GameServerConfig"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.gameServerDeployments.update",
    "stage": "BETA",
    "title": "Update GameServerDeployment"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.operations.list",
    "stage": "BETA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.realms.create",
    "stage": "BETA",
    "title": "Create Realms"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.realms.delete",
    "stage": "BETA",
    "title": "Delete Realm"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.realms.get",
    "stage": "BETA",
    "title": "Get Realm"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.realms.list",
    "stage": "BETA",
    "title": "List Realms"
  },
  {
    "apiDisabled": true,
    "name": "gameservices.realms.update",
    "stage": "BETA",
    "title": "Update Realm"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.operations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.endpoints.connect",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.create",
    "stage": "BETA",
    "title": "Create Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.delete",
    "stage": "BETA",
    "title": "Delete Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.generateConnectManifest",
    "stage": "BETA",
    "title": "Generate Connect Manifest"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.get",
    "stage": "BETA",
    "title": "Get Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy for Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.list",
    "stage": "BETA",
    "title": "List Memberships"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.update",
    "stage": "BETA",
    "title": "Update Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.deidentify",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "healthcare.dicomStores.deidentify"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.dicomWebDelete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.dicomWebRead",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.dicomWebWrite",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.export",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.import",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.patch",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.purge",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "healthcare.fhirStores.deidentify"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.executeBundle",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.export",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.import",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.searchResources",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.ingest",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "healthcare.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.operations.list",
    "stage": "BETA"
  },
  {
    "name": "iam.roles.create",
    "stage": "GA"
  },
  {
    "name": "iam.roles.delete",
    "stage": "GA"
  },
  {
    "name": "iam.roles.get",
    "stage": "GA"
  },
  {
    "name": "iam.roles.list",
    "stage": "GA"
  },
  {
    "name": "iam.roles.undelete",
    "stage": "GA"
  },
  {
    "name": "iam.roles.update",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.create",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.delete",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.get",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.list",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.actAs",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.create",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.delete",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.get",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.getAccessToken",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.getOpenIdToken",
    "stage": "BETA"
  },
  {
    "name": "iam.serviceAccounts.implicitDelegation",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.list",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.signBlob",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.signJwt",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.update",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.projects.getSettings",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.projects.updateSettings",
    "stage": "BETA"
  },
  {
    "name": "iap.tunnel.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iap.tunnel.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iap.tunnelInstances.accessViaIAP",
    "stage": "GA"
  },
  {
    "name": "iap.tunnelInstances.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iap.tunnelInstances.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iap.tunnelZones.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iap.tunnelZones.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iap.web.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.web.getSettings",
    "stage": "BETA"
  },
  {
    "name": "iap.web.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.web.updateSettings",
    "stage": "BETA"
  },
  {
    "name": "iap.webServiceVersions.accessViaIAP",
    "stage": "GA"
  },
  {
    "name": "iap.webServiceVersions.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServiceVersions.getSettings",
    "stage": "BETA"
  },
  {
    "name": "iap.webServiceVersions.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServiceVersions.updateSettings",
    "stage": "BETA"
  },
  {
    "name": "iap.webServices.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServices.getSettings",
    "stage": "BETA"
  },
  {
    "name": "iap.webServices.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServices.updateSettings",
    "stage": "BETA"
  },
  {
    "name": "iap.webTypes.getIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webTypes.getSettings",
    "stage": "BETA"
  },
  {
    "name": "iap.webTypes.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webTypes.updateSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Creates a WorkloadPoolProvider",
    "name": "identityplatform.workloadPoolProviders.create",
    "stage": "BETA",
    "title": "Create WorkloadPoolProvider"
  },
  {
    "apiDisabled": true,
    "description": "Updates a WorkloadPoolProvider",
    "name": "identityplatform.workloadPoolProviders.delete",
    "stage": "BETA",
    "title": "Update WorkloadPoolProvider"
  },
  {
    "apiDisabled": true,
    "description": "Gets a WorkloadPoolProvider",
    "name": "identityplatform.workloadPoolProviders.get",
    "stage": "BETA",
    "title": "Get WorkloadPoolProvider"
  },
  {
    "apiDisabled": true,
    "description": "Lists WorkloadPoolProviders",
    "name": "identityplatform.workloadPoolProviders.list",
    "stage": "BETA",
    "title": "List WorkloadPoolProviders"
  },
  {
    "apiDisabled": true,
    "description": "Undeletes a WorkloadPoolProvider",
    "name": "identityplatform.workloadPoolProviders.undelete",
    "stage": "BETA",
    "title": "Undelete WorkloadPoolProvider"
  },
  {
    "apiDisabled": true,
    "description": "Updates a WorkloadPoolProvider",
    "name": "identityplatform.workloadPoolProviders.update",
    "stage": "BETA",
    "title": "Update WorkloadPoolProvider"
  },
  {
    "apiDisabled": true,
    "description": "Creates a WorkloadPool",
    "name": "identityplatform.workloadPools.create",
    "stage": "BETA",
    "title": "Create WorkloadPool"
  },
  {
    "apiDisabled": true,
    "description": "Updates a WorkloadPool",
    "name": "identityplatform.workloadPools.delete",
    "stage": "BETA",
    "title": "Update WorkloadPool"
  },
  {
    "apiDisabled": true,
    "description": "Gets a WorkloadPool",
    "name": "identityplatform.workloadPools.get",
    "stage": "BETA",
    "title": "Get WorkloadPool"
  },
  {
    "apiDisabled": true,
    "description": "Lists WorkloadPools",
    "name": "identityplatform.workloadPools.list",
    "stage": "BETA",
    "title": "List WorkloadPools"
  },
  {
    "apiDisabled": true,
    "description": "Undeletes a WorkloadPool",
    "name": "identityplatform.workloadPools.undelete",
    "stage": "BETA",
    "title": "Undelete WorkloadPool"
  },
  {
    "apiDisabled": true,
    "description": "Updates a WorkloadPool",
    "name": "identityplatform.workloadPools.update",
    "stage": "BETA",
    "title": "Update WorkloadPool"
  },
  {
    "apiDisabled": true,
    "name": "lifesciences.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "lifesciences.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "lifesciences.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "lifesciences.workflows.run",
    "stage": "BETA"
  },
  {
    "name": "logging.buckets.get",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.list",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.update",
    "stage": "GA"
  },
  {
    "name": "logging.cmekSettings.get",
    "stage": "GA"
  },
  {
    "name": "logging.cmekSettings.update",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.create",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.delete",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.get",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.list",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.update",
    "stage": "GA"
  },
  {
    "name": "logging.logEntries.create",
    "stage": "GA"
  },
  {
    "name": "logging.logEntries.list",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.create",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.delete",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.get",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.list",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.update",
    "stage": "GA"
  },
  {
    "name": "logging.logServiceIndexes.list",
    "stage": "GA"
  },
  {
    "name": "logging.logServices.list",
    "stage": "GA"
  },
  {
    "name": "logging.logs.delete",
    "stage": "GA"
  },
  {
    "name": "logging.logs.list",
    "stage": "GA"
  },
  {
    "name": "logging.privateLogEntries.list",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.create",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.delete",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.get",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.list",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.update",
    "stage": "GA"
  },
  {
    "name": "logging.usage.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.attachTrust",
    "stage": "GA",
    "title": "Attach trust to Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.create",
    "stage": "GA",
    "title": "Create Domains"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.delete",
    "stage": "GA",
    "title": "Delete Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.detachTrust",
    "stage": "GA",
    "title": "Detach trust from Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.get",
    "stage": "GA",
    "title": "Get Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.list",
    "stage": "GA",
    "title": "List Domains"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.reconfigureTrust",
    "stage": "GA",
    "title": "Reconfigure trust for Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.resetpassword",
    "stage": "GA",
    "title": "Reset admin password"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.update",
    "stage": "GA",
    "title": "Update Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.validateTrust",
    "stage": "GA",
    "title": "Validate trust for Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.instances.applyParameters",
    "title": "Apply Parameter Group Updates to Instance"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.instances.create",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.instances.delete",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.instances.get",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.instances.list",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.instances.update",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.instances.updateParameters",
    "title": "Update Instance level parameters"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.locations.get",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.locations.list",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.operations.cancel",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.operations.delete",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.operations.get",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "memcache.operations.list",
    "title": "List Operation"
  },
  {
    "name": "ml.jobs.cancel",
    "stage": "GA",
    "title": "Cancel Cloud ML Job"
  },
  {
    "name": "ml.jobs.create",
    "stage": "GA",
    "title": "Create Cloud ML Jobs"
  },
  {
    "name": "ml.jobs.get",
    "stage": "GA",
    "title": "Read Cloud ML Job"
  },
  {
    "name": "ml.jobs.getIamPolicy",
    "stage": "GA",
    "title": "Read Cloud ML Job IAM Policy"
  },
  {
    "name": "ml.jobs.list",
    "stage": "GA",
    "title": "List Cloud ML Jobs"
  },
  {
    "name": "ml.jobs.setIamPolicy",
    "stage": "GA",
    "title": "Set Cloud ML Job IAM Policy"
  },
  {
    "name": "ml.jobs.update",
    "stage": "GA",
    "title": "Update Cloud ML Job"
  },
  {
    "name": "ml.locations.get",
    "stage": "GA",
    "title": "Read Cloud ML Location"
  },
  {
    "name": "ml.locations.list",
    "stage": "GA",
    "title": "List Cloud ML Locations"
  },
  {
    "name": "ml.models.create",
    "stage": "GA",
    "title": "Create Cloud ML Models"
  },
  {
    "name": "ml.models.delete",
    "stage": "GA",
    "title": "Delete Cloud ML Model"
  },
  {
    "name": "ml.models.get",
    "stage": "GA",
    "title": "Read Cloud ML Model"
  },
  {
    "name": "ml.models.getIamPolicy",
    "stage": "GA",
    "title": "Get Cloud ML Model IAM Policy"
  },
  {
    "name": "ml.models.list",
    "stage": "GA",
    "title": "List Cloud ML Models"
  },
  {
    "name": "ml.models.predict",
    "stage": "GA",
    "title": "Predict With Cloud ML Model"
  },
  {
    "name": "ml.models.setIamPolicy",
    "stage": "GA",
    "title": "Set Cloud ML Model IAM Policy"
  },
  {
    "name": "ml.models.update",
    "stage": "GA",
    "title": "Update Cloud ML Model"
  },
  {
    "name": "ml.operations.cancel",
    "stage": "GA",
    "title": "Cancel Cloud ML Operation"
  },
  {
    "name": "ml.operations.get",
    "stage": "GA",
    "title": "Read Cloud ML Operation"
  },
  {
    "name": "ml.operations.list",
    "stage": "GA",
    "title": "List Cloud ML Operations"
  },
  {
    "name": "ml.projects.getConfig",
    "stage": "GA",
    "title": "Read Cloud ML Project Configuraiton"
  },
  {
    "name": "ml.studies.create",
    "title": "Create Cloud ML study"
  },
  {
    "name": "ml.studies.delete",
    "title": "Delete Cloud ML study"
  },
  {
    "name": "ml.studies.get",
    "title": "Read Cloud ML study"
  },
  {
    "name": "ml.studies.getIamPolicy",
    "title": "Read Cloud ML study IAM Policy"
  },
  {
    "name": "ml.studies.list",
    "title": "List Cloud ML stuides"
  },
  {
    "name": "ml.studies.setIamPolicy",
    "title": "Set Cloud ML study IAM Policy"
  },
  {
    "name": "ml.trials.create",
    "title": "Create Cloud ML trail"
  },
  {
    "name": "ml.trials.delete",
    "title": "Delete Cloud ML trail"
  },
  {
    "name": "ml.trials.get",
    "title": "Read Cloud ML trail"
  },
  {
    "name": "ml.trials.list",
    "title": "List Cloud ML trials"
  },
  {
    "name": "ml.trials.update",
    "title": "Update Cloud ML trial"
  },
  {
    "name": "ml.versions.create",
    "stage": "GA",
    "title": "Create Cloud ML Versions"
  },
  {
    "name": "ml.versions.delete",
    "stage": "GA",
    "title": "Delete Cloud ML Version"
  },
  {
    "name": "ml.versions.get",
    "stage": "GA",
    "title": "Read Cloud ML Version"
  },
  {
    "name": "ml.versions.list",
    "stage": "GA",
    "title": "List Cloud ML Versions"
  },
  {
    "name": "ml.versions.predict",
    "stage": "GA",
    "title": "Predict With Cloud ML Version"
  },
  {
    "name": "ml.versions.update",
    "stage": "GA",
    "title": "Update Cloud ML Version"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.alertPolicies.create",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.alertPolicies.delete",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.alertPolicies.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.alertPolicies.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.alertPolicies.update",
    "stage": "BETA"
  },
  {
    "name": "monitoring.dashboards.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricDescriptors.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricDescriptors.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricDescriptors.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricDescriptors.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.monitoredResourceDescriptors.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.monitoredResourceDescriptors.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannelDescriptors.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannelDescriptors.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.create",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.delete",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.getVerificationCode",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.sendVerificationCode",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.update",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.verify",
    "stage": "BETA"
  },
  {
    "name": "monitoring.publicWidgets.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.publicWidgets.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.publicWidgets.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.publicWidgets.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.publicWidgets.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.timeSeries.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.timeSeries.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.create",
    "stage": "BETA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.delete",
    "stage": "BETA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.get",
    "stage": "BETA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.list",
    "stage": "BETA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.activeDirectories.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create Active Directory connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.activeDirectories.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete Active Directory connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.activeDirectories.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get Active Directory connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.activeDirectories.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List Active Directory connections"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.activeDirectories.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update Active Directory connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.ipRanges.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List IP ranges"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.jobs.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get job"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.jobs.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List jobs"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.regions.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List regions"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.serviceLevels.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List service levels"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.snapshots.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create snapshot"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.snapshots.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete snapshot"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.snapshots.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get snapshot"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.snapshots.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List snapshots"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.snapshots.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update snapshot"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.volumes.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create volume"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.volumes.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete volume"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.volumes.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get volume"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.volumes.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List volumes"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "netappcloudvolumes.volumes.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update volume"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.create",
    "stage": "GA",
    "title": "Create connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.delete",
    "stage": "GA",
    "title": "Delete connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.get",
    "stage": "GA",
    "title": "Get connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.list",
    "stage": "GA",
    "title": "List connectivityTests"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.rerun",
    "stage": "GA",
    "title": "Rerun connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.update",
    "stage": "GA",
    "title": "Update connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.create",
    "stage": "BETA",
    "title": "Create environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.delete",
    "stage": "BETA",
    "title": "Delete environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.get",
    "stage": "BETA",
    "title": "Get environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.list",
    "stage": "BETA",
    "title": "List environments"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.create",
    "stage": "BETA",
    "title": "Create instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.delete",
    "stage": "BETA",
    "title": "Delete instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.get",
    "stage": "BETA",
    "title": "Get instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.list",
    "stage": "BETA",
    "title": "List instances"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.update",
    "stage": "BETA",
    "title": "Update instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "opsconfigmonitoring.resourceMetadata.write",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "orgpolicy.policy.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "orgpolicy.policy.set",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.attachments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.attachments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.attachments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.attachments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.attach",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.update",
    "stage": "GA"
  },
  {
    "name": "pubsub.snapshots.create",
    "stage": "GA"
  },
  {
    "name": "pubsub.snapshots.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "pubsub.snapshots.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.seek",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.update",
    "stage": "GA"
  },
  {
    "name": "pubsub.subscriptions.consume",
    "stage": "GA"
  },
  {
    "name": "pubsub.subscriptions.create",
    "stage": "GA"
  },
  {
    "name": "pubsub.subscriptions.delete",
    "stage": "GA"
  },
  {
    "name": "pubsub.subscriptions.get",
    "stage": "GA"
  },
  {
    "name": "pubsub.subscriptions.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "pubsub.subscriptions.list",
    "stage": "GA"
  },
  {
    "name": "pubsub.subscriptions.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "pubsub.subscriptions.update",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.attachSubscription",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.create",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.delete",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.get",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.list",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.publish",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.update",
    "stage": "GA"
  },
  {
    "name": "pubsub.topics.updateTag",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.assessments.annotate",
    "stage": "BETA",
    "title": "Annotate assessment"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.assessments.create",
    "stage": "BETA",
    "title": "Create assessment"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.create",
    "stage": "BETA",
    "title": "Create key"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.delete",
    "stage": "BETA",
    "title": "Delete key"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.get",
    "stage": "BETA",
    "title": "Get key"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.list",
    "stage": "BETA",
    "title": "List keys"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.update",
    "stage": "BETA",
    "title": "Update key"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.computeFirewallInsights.get",
    "title": "Get Insight for the Firewall Insight Type."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.computeFirewallInsights.list",
    "title": "List Insights for the Firewall Insight Type."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.computeFirewallInsights.update",
    "title": "Update Insight State for the Firewall Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the GCE Instance Group Manager Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the GCE Instance Group Manager Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the GCE Instance Group Manager Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.computeInstanceIdleResourceRecommendations.get",
    "title": "Get Recommendation for the GCE Instance Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.computeInstanceIdleResourceRecommendations.list",
    "title": "List Recommendations for the GCE Instance Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.computeInstanceIdleResourceRecommendations.update",
    "title": "Update Recommendation State for the GCE Instance Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMachineTypeRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the GCE Instance Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMachineTypeRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the GCE Instance Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMachineTypeRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the GCE Instance Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.iamPolicyInsights.get",
    "title": "Get Insight for the IAM Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.iamPolicyInsights.list",
    "title": "List Insights for the IAM Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "recommender.iamPolicyInsights.update",
    "title": "Update Insight State for the IAM Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the IAM Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the IAM Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the IAM Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "recommender.locations.list",
    "stage": "GA"
  },
  {
    "name": "redis.instances.create",
    "stage": "BETA",
    "title": "Create Instances"
  },
  {
    "name": "redis.instances.delete",
    "stage": "BETA",
    "title": "Delete Instance"
  },
  {
    "name": "redis.instances.export",
    "stage": "BETA",
    "title": "Take Snapshot"
  },
  {
    "name": "redis.instances.failover",
    "stage": "BETA",
    "title": "Failover Instance"
  },
  {
    "name": "redis.instances.get",
    "stage": "BETA",
    "title": "Get Instance"
  },
  {
    "name": "redis.instances.import",
    "stage": "BETA",
    "title": "Load Redis DB from Snapshot"
  },
  {
    "name": "redis.instances.list",
    "stage": "BETA",
    "title": "List Instances"
  },
  {
    "name": "redis.instances.update",
    "stage": "BETA",
    "title": "Update Instance"
  },
  {
    "name": "redis.instances.upgrade",
    "stage": "BETA",
    "title": "Upgrade Instance"
  },
  {
    "name": "redis.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "name": "redis.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "name": "redis.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "name": "redis.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "name": "redis.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "name": "redis.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.databases.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create database"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.databases.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete database"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.databases.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get database"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.databases.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List databases"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.databases.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update database"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.subscriptions.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create subscription"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.subscriptions.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete subscription"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.subscriptions.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get subscription"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.subscriptions.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List subscriptions"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "redisenterprisecloud.subscriptions.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update subscription"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.create",
    "stage": "BETA",
    "title": "Create Action"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.delete",
    "stage": "BETA",
    "title": "Delete Action"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.get",
    "stage": "BETA",
    "title": "Get Action"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.set",
    "stage": "BETA",
    "title": "Set Action Result"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.update",
    "stage": "BETA",
    "title": "Update Action"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.blobs.create",
    "stage": "BETA",
    "title": "Create Blob"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.blobs.get",
    "stage": "BETA",
    "title": "Get Blob"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.botsessions.create",
    "stage": "BETA",
    "title": "Create Bot Session"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.botsessions.update",
    "stage": "BETA",
    "title": "Update Bot Session"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.create",
    "stage": "BETA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.delete",
    "stage": "BETA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.get",
    "stage": "BETA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.list",
    "stage": "BETA",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.logstreams.create",
    "stage": "BETA",
    "title": "Create Logstream"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.logstreams.get",
    "stage": "BETA",
    "title": "Get Logstream"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.logstreams.update",
    "stage": "BETA",
    "title": "Update Logstream"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.create",
    "stage": "BETA",
    "title": "Create Worker Pool"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.delete",
    "stage": "BETA",
    "title": "Delete Worker Pool"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.get",
    "stage": "BETA",
    "title": "Get Worker Pool"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.list",
    "stage": "BETA",
    "title": "List Worker Pools"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.update",
    "stage": "BETA",
    "title": "Update Worker Pool"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "resourcemanager.projects.createBillingAssignment",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.delete",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "resourcemanager.projects.deleteBillingAssignment",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.get",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.undelete",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.update",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.updateLiens",
    "stage": "GA"
  },
  {
    "name": "run.configurations.get",
    "stage": "BETA"
  },
  {
    "name": "run.configurations.list",
    "stage": "BETA"
  },
  {
    "name": "run.locations.list",
    "stage": "BETA"
  },
  {
    "name": "run.revisions.delete",
    "stage": "BETA"
  },
  {
    "name": "run.revisions.get",
    "stage": "BETA"
  },
  {
    "name": "run.revisions.list",
    "stage": "BETA"
  },
  {
    "name": "run.routes.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "run.routes.invoke",
    "onlyInPredefinedRoles": true,
    "stage": "BETA"
  },
  {
    "name": "run.routes.list",
    "stage": "BETA"
  },
  {
    "name": "run.services.create",
    "stage": "BETA"
  },
  {
    "name": "run.services.delete",
    "stage": "BETA"
  },
  {
    "name": "run.services.get",
    "stage": "BETA"
  },
  {
    "name": "run.services.getIamPolicy",
    "stage": "BETA"
  },
  {
    "name": "run.services.list",
    "stage": "BETA"
  },
  {
    "name": "run.services.setIamPolicy",
    "stage": "BETA"
  },
  {
    "name": "run.services.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.create",
    "stage": "GA",
    "title": "Create Config Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.delete",
    "stage": "GA",
    "title": "Delete Config Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.get",
    "stage": "GA",
    "title": "Get Config Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Config object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.list",
    "stage": "GA",
    "title": "List Config Resources"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy for Config object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.update",
    "stage": "GA",
    "title": "Update Config Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.create",
    "stage": "GA",
    "title": "Create Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.delete",
    "stage": "GA",
    "title": "Delete Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.get",
    "stage": "GA",
    "title": "Get Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Variable object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.list",
    "stage": "GA",
    "title": "List Variable Resources"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy for Variable object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.update",
    "stage": "GA",
    "title": "Update Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.watch",
    "stage": "GA",
    "title": "Watch Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.create",
    "stage": "GA",
    "title": "Create Waiter Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.delete",
    "stage": "GA",
    "title": "Delete Waiter Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.get",
    "stage": "GA",
    "title": "Get Waiter Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Waiter object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.list",
    "stage": "GA",
    "title": "List Waiter Resources"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy for Waiter object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.update",
    "stage": "GA",
    "title": "Update Waiter Resource"
  },
  {
    "name": "secretmanager.locations.get",
    "stage": "GA"
  },
  {
    "name": "secretmanager.locations.list",
    "stage": "GA"
  },
  {
    "name": "secretmanager.secrets.create",
    "stage": "GA"
  },
  {
    "name": "secretmanager.secrets.delete",
    "stage": "GA"
  },
  {
    "name": "secretmanager.secrets.get",
    "stage": "GA"
  },
  {
    "name": "secretmanager.secrets.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "secretmanager.secrets.list",
    "stage": "GA"
  },
  {
    "name": "secretmanager.secrets.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "secretmanager.secrets.update",
    "stage": "GA"
  },
  {
    "name": "secretmanager.versions.access",
    "stage": "GA"
  },
  {
    "name": "secretmanager.versions.add",
    "stage": "GA"
  },
  {
    "name": "secretmanager.versions.destroy",
    "stage": "GA"
  },
  {
    "name": "secretmanager.versions.disable",
    "stage": "GA"
  },
  {
    "name": "secretmanager.versions.enable",
    "stage": "GA"
  },
  {
    "name": "secretmanager.versions.get",
    "stage": "GA"
  },
  {
    "name": "secretmanager.versions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindingoperations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindingoperations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.validate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instanceoperations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instanceoperations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.update",
    "stage": "BETA"
  },
  {
    "name": "serviceconsumermanagement.consumers.get",
    "stage": "BETA",
    "title": "Get the enablement state of a service for a consumer"
  },
  {
    "name": "serviceconsumermanagement.quota.get",
    "stage": "BETA",
    "title": "Get quota information"
  },
  {
    "name": "serviceconsumermanagement.quota.update",
    "stage": "BETA",
    "title": "Set quota overrides"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.addResource",
    "stage": "BETA",
    "title": "Add a resource in a tenancy unit for a service"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.create",
    "stage": "BETA",
    "title": "Create a tenancy unit for a service"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.delete",
    "stage": "BETA",
    "title": "Delete a tenancy unit for a service"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.list",
    "stage": "BETA",
    "title": "List or search tenancy units for a service"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.removeResource",
    "stage": "BETA",
    "title": "Remove a resource from a tenancy unit for a service"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.create",
    "stage": "BETA",
    "title": "Create Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.delete",
    "stage": "BETA",
    "title": "Delete Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.get",
    "stage": "BETA",
    "title": "Read Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.list",
    "stage": "BETA",
    "title": "List Endpoints"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.update",
    "stage": "BETA",
    "title": "Update Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.associatePrivateZone",
    "stage": "BETA",
    "title": "Associate Private DNS Zone with Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.create",
    "stage": "BETA",
    "title": "Create Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.delete",
    "stage": "BETA",
    "title": "Delete Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.get",
    "stage": "BETA",
    "title": "Read Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.list",
    "stage": "BETA",
    "title": "List Namespaces"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.update",
    "stage": "BETA",
    "title": "Update Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.create",
    "stage": "BETA",
    "title": "Create Service"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.delete",
    "stage": "BETA",
    "title": "Delete Service"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.get",
    "stage": "BETA",
    "title": "Read Service"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.list",
    "stage": "BETA",
    "title": "List Services"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.resolve",
    "stage": "BETA",
    "title": "Resolve a Service and all of its Endpoints"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.update",
    "stage": "BETA",
    "title": "Update Service"
  },
  {
    "name": "servicemanagement.services.bind",
    "stage": "GA",
    "title": "Activate/Deactivate service."
  },
  {
    "name": "servicemanagement.services.check",
    "stage": "GA",
    "title": "Check the usage of the service."
  },
  {
    "name": "servicemanagement.services.create",
    "stage": "GA",
    "title": "Create service"
  },
  {
    "name": "servicemanagement.services.delete",
    "stage": "GA",
    "title": "Delete service"
  },
  {
    "name": "servicemanagement.services.get",
    "stage": "GA",
    "title": "Read service"
  },
  {
    "name": "servicemanagement.services.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "servicemanagement.services.list",
    "stage": "GA",
    "title": "List services"
  },
  {
    "name": "servicemanagement.services.quota",
    "stage": "GA",
    "title": "Allocate and release quota of the service."
  },
  {
    "name": "servicemanagement.services.report",
    "stage": "GA",
    "title": "Report the usage of the service."
  },
  {
    "name": "servicemanagement.services.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "servicemanagement.services.update",
    "stage": "GA",
    "title": "Update service"
  },
  {
    "name": "servicenetworking.operations.cancel",
    "stage": "BETA",
    "title": "Cancel operation"
  },
  {
    "name": "servicenetworking.operations.delete",
    "stage": "BETA",
    "title": "Delete operation"
  },
  {
    "name": "servicenetworking.operations.get",
    "stage": "BETA",
    "title": "Read operation"
  },
  {
    "name": "servicenetworking.operations.list",
    "stage": "BETA",
    "title": "List operations"
  },
  {
    "name": "servicenetworking.services.addPeering",
    "stage": "BETA",
    "title": "Add peering"
  },
  {
    "name": "servicenetworking.services.addSubnetwork",
    "stage": "BETA",
    "title": "Add subnetwork"
  },
  {
    "name": "servicenetworking.services.get",
    "stage": "BETA",
    "title": "Get service networking states"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.create",
    "stage": "BETA",
    "title": "Create a new API key"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.delete",
    "stage": "BETA",
    "title": "Delete an API key"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.get",
    "stage": "BETA",
    "title": "Get API key details"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.getProjectForKey",
    "stage": "BETA",
    "title": "Get parent and name for the corresponding key"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.list",
    "stage": "BETA",
    "title": "List API keys"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.regenerate",
    "stage": "BETA",
    "title": "Regenerate an API key"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.revert",
    "stage": "BETA",
    "title": "Revert an API key"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.update",
    "stage": "BETA",
    "title": "Update API key details"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.operations.cancel",
    "stage": "BETA",
    "title": "Cancel operation"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.operations.delete",
    "stage": "BETA",
    "title": "Delete operation"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.operations.get",
    "stage": "BETA",
    "title": "Read operation"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.operations.list",
    "stage": "BETA",
    "title": "List operations"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.quotas.get",
    "stage": "BETA",
    "title": "Get quota information"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.quotas.update",
    "stage": "BETA",
    "title": "Set quota overrides"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.services.disable",
    "stage": "BETA",
    "title": "Disable a service"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.services.enable",
    "stage": "BETA",
    "title": "Enable a service"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.services.get",
    "stage": "BETA",
    "title": "Get enablement state of a service"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.services.list",
    "stage": "BETA",
    "title": "List services used by a project"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.services.use",
    "stage": "BETA",
    "title": "Consume quota and billing"
  },
  {
    "name": "source.repos.create",
    "stage": "GA"
  },
  {
    "name": "source.repos.delete",
    "stage": "GA"
  },
  {
    "name": "source.repos.get",
    "stage": "GA"
  },
  {
    "name": "source.repos.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "source.repos.getProjectConfig",
    "stage": "GA"
  },
  {
    "name": "source.repos.list",
    "stage": "GA"
  },
  {
    "name": "source.repos.setIamPolicy",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "source.repos.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "name": "source.repos.updateProjectConfig",
    "stage": "GA"
  },
  {
    "name": "source.repos.updateRepoConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupOperations.cancel",
    "stage": "GA",
    "title": "Cancel a Spanner backup operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupOperations.get",
    "stage": "GA",
    "title": "Get a Spanner backup operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupOperations.list",
    "stage": "GA",
    "title": "List Spanner backup operations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.create",
    "stage": "GA",
    "title": "Create a backup of a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.delete",
    "stage": "GA",
    "title": "Delete a Spanner backup"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.get",
    "stage": "GA",
    "title": "Get a Spanner backup's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.getIamPolicy",
    "stage": "GA",
    "title": "Get a Spanner backup's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.list",
    "stage": "GA",
    "title": "List Spanner backups"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.restoreDatabase",
    "stage": "GA",
    "title": "Permission to restore from a particular backup to a new Spanner database. To restore, the caller also needs the spanner.databases.create permission to create the new Spanner database."
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.setIamPolicy",
    "stage": "GA",
    "title": "Set a Spanner backup's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.update",
    "stage": "GA",
    "title": "Update a Spanner backup's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databaseOperations.cancel",
    "stage": "GA",
    "title": "Cancel a Spanner database operation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "spanner.databaseOperations.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Delete a Spanner database operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databaseOperations.get",
    "stage": "GA",
    "title": "Get a Spanner database operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databaseOperations.list",
    "stage": "GA",
    "title": "List Spanner database operations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.beginOrRollbackReadWriteTransaction",
    "stage": "GA",
    "title": "Begin/rollback a read-write transaction on a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.beginReadOnlyTransaction",
    "stage": "GA",
    "title": "Begin a read-only transaction on a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.create",
    "stage": "GA",
    "title": "Create a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.createBackup",
    "stage": "GA",
    "title": "Create a backup of a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.drop",
    "stage": "GA",
    "title": "Drop a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.get",
    "stage": "GA",
    "title": "Get a Spanner database's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.getDdl",
    "stage": "GA",
    "title": "Get a Spanner database's schema"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.getIamPolicy",
    "stage": "GA",
    "title": "Get a Spanner database's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.list",
    "stage": "GA",
    "title": "List Spanner databases"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.read",
    "stage": "GA",
    "title": "Read from a Spanner database using the read API"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.select",
    "stage": "GA",
    "title": "SQL select from a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.setIamPolicy",
    "stage": "GA",
    "title": "Set a Spanner database's IAM Policy"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "spanner.databases.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Update a Spanner database's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.updateDdl",
    "stage": "GA",
    "title": "Update a Spanner database's schema"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.write",
    "stage": "GA",
    "title": "Write into a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigs.get",
    "stage": "GA",
    "title": "Get a Spanner instance configuration"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigs.list",
    "stage": "GA",
    "title": "List the set of instance configurations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceOperations.cancel",
    "stage": "GA",
    "title": "Cancel a Spanner instance operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceOperations.delete",
    "stage": "GA",
    "title": "Delete a Spanner instance operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceOperations.get",
    "stage": "GA",
    "title": "Get a Spanner instance operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceOperations.list",
    "stage": "GA",
    "title": "List Spanner instance operations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.create",
    "stage": "GA",
    "title": "Create a Spanner instance"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.delete",
    "stage": "GA",
    "title": "Delete a Spanner instance"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.get",
    "stage": "GA",
    "title": "Get a Spanner instance's configuration"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.getIamPolicy",
    "stage": "GA",
    "title": "Get a Spanner instance's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.list",
    "stage": "GA",
    "title": "List Spanner instances"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.setIamPolicy",
    "stage": "GA",
    "title": "Set a Spanner instance's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.update",
    "stage": "GA",
    "title": "Update a Spanner instance"
  },
  {
    "apiDisabled": true,
    "name": "spanner.sessions.create",
    "stage": "GA",
    "title": "Create a Spanner session"
  },
  {
    "apiDisabled": true,
    "name": "spanner.sessions.delete",
    "stage": "GA",
    "title": "Delete a Spanner session"
  },
  {
    "apiDisabled": true,
    "name": "spanner.sessions.get",
    "stage": "GA",
    "title": "Get a Spanner session"
  },
  {
    "apiDisabled": true,
    "name": "spanner.sessions.list",
    "stage": "GA",
    "title": "List all Spanner sessions"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "stackdriver.projects.edit",
    "onlyInPredefinedRoles": true,
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "stackdriver.projects.get",
    "stage": "DEPRECATED"
  },
  {
    "name": "stackdriver.resourceMetadata.write",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "storage.buckets.create",
    "stage": "GA",
    "title": "Create GCS Bucket"
  },
  {
    "apiDisabled": true,
    "name": "storage.buckets.delete",
    "stage": "GA",
    "title": "Delete GCS Bucket"
  },
  {
    "apiDisabled": true,
    "name": "storage.buckets.get",
    "stage": "GA",
    "title": "Read GCS Bucket Metadata"
  },
  {
    "apiDisabled": true,
    "name": "storage.buckets.getIamPolicy",
    "stage": "GA",
    "title": "Read GCS Bucket IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "storage.buckets.list",
    "stage": "GA",
    "title": "List GCS Buckets"
  },
  {
    "apiDisabled": true,
    "name": "storage.buckets.setIamPolicy",
    "stage": "GA",
    "title": "Set GCS Bucket IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "storage.buckets.update",
    "stage": "GA",
    "title": "Update GCS Bucket Metadata"
  },
  {
    "apiDisabled": true,
    "name": "storage.hmacKeys.create",
    "stage": "GA",
    "title": "Create GCS HMAC Key"
  },
  {
    "apiDisabled": true,
    "name": "storage.hmacKeys.delete",
    "stage": "GA",
    "title": "Delete GCS HMAC Key"
  },
  {
    "apiDisabled": true,
    "name": "storage.hmacKeys.get",
    "stage": "GA",
    "title": "Read GCS HMAC Key Metadata"
  },
  {
    "apiDisabled": true,
    "name": "storage.hmacKeys.list",
    "stage": "GA",
    "title": "List GCS HMAC Keys"
  },
  {
    "apiDisabled": true,
    "name": "storage.hmacKeys.update",
    "stage": "GA",
    "title": "Update GCS HMAC Key Metadata"
  },
  {
    "apiDisabled": true,
    "name": "storage.objects.create",
    "stage": "GA",
    "title": "Create GCS Object"
  },
  {
    "apiDisabled": true,
    "name": "storage.objects.delete",
    "stage": "GA",
    "title": "Delete GCS Object"
  },
  {
    "apiDisabled": true,
    "name": "storage.objects.get",
    "stage": "GA",
    "title": "Read GCS Object Data and Metadata"
  },
  {
    "apiDisabled": true,
    "name": "storage.objects.getIamPolicy",
    "stage": "GA",
    "title": "Get GCS Object IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "storage.objects.list",
    "stage": "GA",
    "title": "List GCS Objects"
  },
  {
    "apiDisabled": true,
    "name": "storage.objects.setIamPolicy",
    "stage": "GA",
    "title": "Set GCS Object IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "storage.objects.update",
    "stage": "GA",
    "title": "Update GCS Object Metadata"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.create",
    "stage": "GA",
    "title": "Create TransferJob"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.delete",
    "stage": "GA",
    "title": "Delete TransferJob"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.get",
    "stage": "GA",
    "title": "Read TransferJob"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.list",
    "stage": "GA",
    "title": "List TransferJobs and their executions."
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.update",
    "stage": "GA",
    "title": "Update TransferJob"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.cancel",
    "stage": "GA",
    "title": "Cancel TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.get",
    "stage": "GA",
    "title": "Read TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.list",
    "stage": "GA",
    "title": "List TransferOperations"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.pause",
    "stage": "GA",
    "title": "Pause TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.resume",
    "stage": "GA",
    "title": "Resume TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.projects.getServiceAccount",
    "stage": "GA",
    "title": "Read Storage Transfer Service Account"
  },
  {
    "apiDisabled": true,
    "name": "subscribewithgoogledeveloper.tools.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "threatdetection.detectorSettings.clear",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "threatdetection.detectorSettings.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "threatdetection.detectorSettings.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "tpu.acceleratortypes.get",
    "stage": "GA",
    "title": "Get acceleratorTypes"
  },
  {
    "apiDisabled": true,
    "name": "tpu.acceleratortypes.list",
    "stage": "GA",
    "title": "List acceleratorTypes"
  },
  {
    "apiDisabled": true,
    "name": "tpu.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "tpu.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.create",
    "stage": "GA",
    "title": "Create Nodes"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.delete",
    "stage": "GA",
    "title": "Delete Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.get",
    "stage": "GA",
    "title": "Get Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.list",
    "stage": "GA",
    "title": "List Nodes"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.reimage",
    "stage": "GA",
    "title": "Reimage Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.reset",
    "stage": "GA",
    "title": "Reset Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.start",
    "stage": "GA",
    "title": "Start Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.stop",
    "stage": "GA",
    "title": "Stop Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "tpu.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "tpu.tensorflowversions.get",
    "stage": "GA",
    "title": "Get tensorflowVersions"
  },
  {
    "apiDisabled": true,
    "name": "tpu.tensorflowversions.list",
    "stage": "GA",
    "title": "List tensorflowVersions"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.deployments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.deployments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.deployments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.operations.list",
    "stage": "GA"
  }
]
